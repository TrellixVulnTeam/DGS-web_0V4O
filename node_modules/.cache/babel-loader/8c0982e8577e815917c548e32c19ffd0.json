{"ast":null,"code":"import _slicedToArray from \"C:/Users/Daniel/Desktop/DGS web/DGS-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\n/**\r\n * React Router v6.2.2\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\nimport { createContext, useRef, useState, useLayoutEffect, createElement, useContext, useEffect, useMemo, useCallback, Children, isValidElement, Fragment } from 'react';\nimport { createMemoryHistory, Action, parsePath } from 'history';\nexport { Action as NavigationType, createPath, parsePath } from 'history';\n\nfunction invariant(cond, message) {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n} ///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * A Navigator is a \"location changer\"; it's how you get to different locations.\r\n *\r\n * Every history instance conforms to the Navigator interface, but the\r\n * distinction is useful primarily when it comes to the low-level <Router> API\r\n * where both the location and a navigator must be provided separately in order\r\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\r\n * and/or location were to be read directly from the history instance.\r\n */\n\n\nvar NavigationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nvar LocationContext = /*#__PURE__*/createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nvar RouteContext = /*#__PURE__*/createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n} ///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * A <Router> that stores all entries in memory.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\r\n */\n\n\nfunction MemoryRouter(_ref) {\n  var basename = _ref.basename,\n      children = _ref.children,\n      initialEntries = _ref.initialEntries,\n      initialIndex = _ref.initialIndex;\n  var historyRef = useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries: initialEntries,\n      initialIndex: initialIndex\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _useState = useState({\n    action: history.action,\n    location: history.location\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\r\n * Changes the current location.\r\n *\r\n * Note: This API is mostly useful in React.Component subclasses that are not\r\n * able to use hooks. In functional components, we recommend you use the\r\n * `useNavigate` hook instead.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#navigate\r\n */\n\n\nfunction Navigate(_ref2) {\n  var to = _ref2.to,\n      replace = _ref2.replace,\n      state = _ref2.state;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  var navigate = useNavigate();\n  useEffect(function () {\n    navigate(to, {\n      replace: replace,\n      state: state\n    });\n  });\n  return null;\n}\n/**\r\n * Renders the child route's element, if there is one.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#outlet\r\n */\n\n\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\r\n * Declares an element that should be rendered at a certain URL path.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#route\r\n */\n\n\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false);\n}\n/**\r\n * Provides location context for the rest of the app.\r\n *\r\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\r\n * router that is more specific to your environment such as a <BrowserRouter>\r\n * in web browsers or a <StaticRouter> for server rendering.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#router\r\n */\n\n\nfunction Router(_ref3) {\n  var _ref3$basename = _ref3.basename,\n      basenameProp = _ref3$basename === void 0 ? \"/\" : _ref3$basename,\n      _ref3$children = _ref3.children,\n      children = _ref3$children === void 0 ? null : _ref3$children,\n      locationProp = _ref3.location,\n      _ref3$navigationType = _ref3.navigationType,\n      navigationType = _ref3$navigationType === void 0 ? Action.Pop : _ref3$navigationType,\n      navigator = _ref3.navigator,\n      _ref3$static = _ref3.static,\n      staticProp = _ref3$static === void 0 ? false : _ref3$static;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0;\n  var basename = normalizePathname(basenameProp);\n  var navigationContext = useMemo(function () {\n    return {\n      basename: basename,\n      navigator: navigator,\n      static: staticProp\n    };\n  }, [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  var _locationProp = locationProp,\n      _locationProp$pathnam = _locationProp.pathname,\n      pathname = _locationProp$pathnam === void 0 ? \"/\" : _locationProp$pathnam,\n      _locationProp$search = _locationProp.search,\n      search = _locationProp$search === void 0 ? \"\" : _locationProp$search,\n      _locationProp$hash = _locationProp.hash,\n      hash = _locationProp$hash === void 0 ? \"\" : _locationProp$hash,\n      _locationProp$state = _locationProp.state,\n      state = _locationProp$state === void 0 ? null : _locationProp$state,\n      _locationProp$key = _locationProp.key,\n      key = _locationProp$key === void 0 ? \"default\" : _locationProp$key;\n  var location = useMemo(function () {\n    var trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search: search,\n      hash: hash,\n      state: state,\n      key: key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (location == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location: location,\n      navigationType: navigationType\n    }\n  }));\n}\n/**\r\n * A container for a nested tree of <Route> elements that renders the branch\r\n * that best matches the current location.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#routes\r\n */\n\n\nfunction Routes(_ref4) {\n  var children = _ref4.children,\n      location = _ref4.location;\n  return useRoutes(createRoutesFromChildren(children), location);\n} ///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Returns the full href for the given \"to\" value. This is useful for building\r\n * custom links that are also accessible and preserve right-click behavior.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#usehref\r\n */\n\n\nfunction useHref(to) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n\n  var _useContext = useContext(NavigationContext),\n      basename = _useContext.basename,\n      navigator = _useContext.navigator;\n\n  var _useResolvedPath = useResolvedPath(to),\n      hash = _useResolvedPath.hash,\n      pathname = _useResolvedPath.pathname,\n      search = _useResolvedPath.search;\n\n  var joinedPathname = pathname;\n\n  if (basename !== \"/\") {\n    var toPathname = getToPathname(to);\n    var endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname = pathname === \"/\" ? basename + (endsWithSlash ? \"/\" : \"\") : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search: search,\n    hash: hash\n  });\n}\n/**\r\n * Returns true if this component is a descendant of a <Router>.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\r\n */\n\n\nfunction useInRouterContext() {\n  return useContext(LocationContext) != null;\n}\n/**\r\n * Returns the current location object, which represents the current URL in web\r\n * browsers.\r\n *\r\n * Note: If you're using this it may mean you're doing some of your own\r\n * \"routing\" in your app, and we'd like to know what your use case is. We may\r\n * be able to provide something higher-level to better suit your needs.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\r\n */\n\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return useContext(LocationContext).location;\n}\n/**\r\n * Returns the current navigation action which describes how the router came to\r\n * the current location, either by a pop, push, or replace on the history stack.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\r\n */\n\n\nfunction useNavigationType() {\n  return useContext(LocationContext).navigationType;\n}\n/**\r\n * Returns true if the URL for the given \"to\" value matches the current URL.\r\n * This is useful for components that need to know \"active\" state, e.g.\r\n * <NavLink>.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#usematch\r\n */\n\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n\n  var _useLocation = useLocation(),\n      pathname = _useLocation.pathname;\n\n  return useMemo(function () {\n    return matchPath(pattern, pathname);\n  }, [pathname, pattern]);\n}\n/**\r\n * The interface for the navigate() function returned from useNavigate().\r\n */\n\n/**\r\n * Returns an imperative method for changing the location. Used by <Link>s, but\r\n * may also be used by other elements to change the location.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\r\n */\n\n\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n\n  var _useContext2 = useContext(NavigationContext),\n      basename = _useContext2.basename,\n      navigator = _useContext2.navigator;\n\n  var _useContext3 = useContext(RouteContext),\n      matches = _useContext3.matches;\n\n  var _useLocation2 = useLocation(),\n      locationPathname = _useLocation2.pathname;\n\n  var routePathnamesJson = JSON.stringify(matches.map(function (match) {\n    return match.pathnameBase;\n  }));\n  var activeRef = useRef(false);\n  useEffect(function () {\n    activeRef.current = true;\n  });\n  var navigate = useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    var path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n\n    if (basename !== \"/\") {\n      path.pathname = joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\n\nvar OutletContext = /*#__PURE__*/createContext(null);\n/**\r\n * Returns the context (if provided) for the child route at this level of the route\r\n * hierarchy.\r\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\r\n */\n\nfunction useOutletContext() {\n  return useContext(OutletContext);\n}\n/**\r\n * Returns the element for the child route at this level of the route\r\n * hierarchy. Used internally by <Outlet> to render child routes.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\r\n */\n\n\nfunction useOutlet(context) {\n  var outlet = useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\r\n * Returns an object of key/value pairs of the dynamic params from the current\r\n * URL that were matched by the route path.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useparams\r\n */\n\n\nfunction useParams() {\n  var _useContext4 = useContext(RouteContext),\n      matches = _useContext4.matches;\n\n  var routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\r\n * Resolves the pathname of the given `to` value against the current location.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\r\n */\n\n\nfunction useResolvedPath(to) {\n  var _useContext5 = useContext(RouteContext),\n      matches = _useContext5.matches;\n\n  var _useLocation3 = useLocation(),\n      locationPathname = _useLocation3.pathname;\n\n  var routePathnamesJson = JSON.stringify(matches.map(function (match) {\n    return match.pathnameBase;\n  }));\n  return useMemo(function () {\n    return resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);\n  }, [to, routePathnamesJson, locationPathname]);\n}\n/**\r\n * Returns the element of the route that matched the current location, prepared\r\n * with the correct context to render the remainder of the route tree. Route\r\n * elements in the tree must render an <Outlet> to render their child route's\r\n * element.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\r\n */\n\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n\n  var _useContext6 = useContext(RouteContext),\n      parentMatches = _useContext6.matches;\n\n  var routeMatch = parentMatches[parentMatches.length - 1];\n  var parentParams = routeMatch ? routeMatch.params : {};\n  var parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  var parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  var parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    var parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  var locationFromContext = useLocation();\n  var location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    var parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  var pathname = location.pathname || \"/\";\n  var remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  var matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  return _renderMatches(matches && matches.map(function (match) {\n    return Object.assign({}, match, {\n      params: Object.assign({}, parentParams, match.params),\n      pathname: joinPaths([parentPathnameBase, match.pathname]),\n      pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])\n    });\n  }), parentMatches);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Creates a route config from a React \"children\" object, which is usually\r\n * either a `<Route>` element or an array of them. Used internally by\r\n * `<Routes>` to create a route config from its children.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\r\n */\n\n\nfunction createRoutesFromChildren(children) {\n  var routes = [];\n  Children.forEach(children, function (element) {\n    if (! /*#__PURE__*/isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    var route = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\r\n * The parameters that were parsed from the URL path.\r\n */\n\n/**\r\n * Returns a path with params interpolated.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\r\n */\n\n\nfunction generatePath(path, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return path.replace(/:(\\w+)/g, function (_, key) {\n    !(params[key] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Missing \\\":\" + key + \"\\\" param\") : invariant(false) : void 0;\n    return params[key];\n  }).replace(/\\/*\\*$/, function (_) {\n    return params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\");\n  });\n}\n/**\r\n * A RouteMatch contains info about how a route matched a URL.\r\n */\n\n/**\r\n * Matches the given routes to a location and returns the match data.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\r\n */\n\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  var location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  var pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  var branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  var matches = null;\n\n  for (var i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  routes.forEach(function (route, index) {\n    var meta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route: route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      !meta.relativePath.startsWith(parentPath) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\") : invariant(false) : void 0;\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    var path = joinPaths([parentPath, meta.relativePath]);\n    var routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      !(route.index !== true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\")) : invariant(false) : void 0;\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path: path,\n      score: computeScore(path, route.index),\n      routesMeta: routesMeta\n    });\n  });\n  return branches;\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort(function (a, b) {\n    return a.score !== b.score ? b.score - a.score // Higher score first\n    : compareIndexes(a.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }), b.routesMeta.map(function (meta) {\n      return meta.childrenIndex;\n    }));\n  });\n}\n\nvar paramRe = /^:\\w+$/;\nvar dynamicSegmentValue = 3;\nvar indexRouteValue = 2;\nvar emptySegmentValue = 1;\nvar staticSegmentValue = 10;\nvar splatPenalty = -2;\n\nvar isSplat = function isSplat(s) {\n  return s === \"*\";\n};\n\nfunction computeScore(path, index) {\n  var segments = path.split(\"/\");\n  var initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(function (s) {\n    return !isSplat(s);\n  }).reduce(function (score, segment) {\n    return score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue);\n  }, initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  var siblings = a.length === b.length && a.slice(0, -1).every(function (n, i) {\n    return n === b[i];\n  });\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  var routesMeta = branch.routesMeta;\n  var matchedParams = {};\n  var matchedPathname = \"/\";\n  var matches = [];\n\n  for (var i = 0; i < routesMeta.length; ++i) {\n    var meta = routesMeta[i];\n    var end = i === routesMeta.length - 1;\n    var remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    var match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end: end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    var route = meta.route;\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route: route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\r\n * Renders the result of `matchRoutes()` into a React element.\r\n */\n\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction _renderMatches(matches, parentMatches) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) return null;\n  return matches.reduceRight(function (outlet, match, index) {\n    return /*#__PURE__*/createElement(RouteContext.Provider, {\n      children: match.route.element !== undefined ? match.route.element : outlet,\n      value: {\n        outlet: outlet,\n        matches: parentMatches.concat(matches.slice(0, index + 1))\n      }\n    });\n  }, null);\n}\n/**\r\n * A PathPattern is used to match on some portion of a URL pathname.\r\n */\n\n/**\r\n * Performs pattern matching on a URL pathname and returns information about\r\n * the match.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\r\n */\n\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  var _compilePath = compilePath(pattern.path, pattern.caseSensitive, pattern.end),\n      _compilePath2 = _slicedToArray(_compilePath, 2),\n      matcher = _compilePath2[0],\n      paramNames = _compilePath2[1];\n\n  var match = pathname.match(matcher);\n  if (!match) return null;\n  var matchedPathname = match[0];\n  var pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  var captureGroups = match.slice(1);\n  var params = paramNames.reduce(function (memo, paramName, index) {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      var splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params: params,\n    pathname: matchedPathname,\n    pathnameBase: pathnameBase,\n    pattern: pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\")) : void 0;\n  var paramNames = [];\n  var regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/:(\\w+)/g, function (_, paramName) {\n    paramNames.push(paramName);\n    return \"([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n    // parent routes to matching only their own words and nothing more, e.g. parent\n    // route \"/home\" should not match \"/home2\".\n    // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n    // but do not consume the character in the matched path so they can match against\n    // nested paths.\n    \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  var matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\")) : void 0;\n    return value;\n  }\n}\n/**\r\n * Returns a resolved path object relative to the given pathname.\r\n *\r\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\r\n */\n\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  var _ref5 = typeof to === \"string\" ? parsePath(to) : to,\n      toPathname = _ref5.pathname,\n      _ref5$search = _ref5.search,\n      search = _ref5$search === void 0 ? \"\" : _ref5$search,\n      _ref5$hash = _ref5.hash,\n      hash = _ref5$hash === void 0 ? \"\" : _ref5$hash;\n\n  var pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname: pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  var segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  var relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(function (segment) {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(toArg, routePathnames, locationPathname) {\n  var to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  var toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  var from;\n\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    var routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      var toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  var path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.\n\n  if (toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\") && !path.pathname.endsWith(\"/\")) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  var nextChar = pathname.charAt(basename.length);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nvar joinPaths = function joinPaths(paths) {\n  return paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n};\n\nvar normalizePathname = function normalizePathname(pathname) {\n  return pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n};\n\nvar normalizeSearch = function normalizeSearch(search) {\n  return !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n};\n\nvar normalizeHash = function normalizeHash(hash) {\n  return !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n}; ///////////////////////////////////////////////////////////////////////////////\n\n\nexport { MemoryRouter, Navigate, Outlet, Route, Router, Routes, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, createRoutesFromChildren, generatePath, matchPath, matchRoutes, renderMatches, resolvePath, useHref, useInRouterContext, useLocation, useMatch, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRoutes };","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,QAAhC,EAA0CC,eAA1C,EAA2DC,aAA3D,EAA0EC,UAA1E,EAAsFC,SAAtF,EAAiGC,OAAjG,EAA0GC,WAA1G,EAAuHC,QAAvH,EAAiIC,cAAjI,EAAiJC,QAAjJ,QAAiK,OAAjK;AACA,SAASC,mBAAT,EAA8BC,MAA9B,EAAsCC,SAAtC,QAAuD,SAAvD;AACA,SAASD,MAAM,IAAIE,cAAnB,EAAmCC,UAAnC,EAA+CF,SAA/C,QAAgE,SAAhE;;AAEA,SAASG,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkC;AAChC,MAAI,CAACD,IAAL,EAAW,MAAM,IAAIE,KAAJ,CAAUD,OAAV,CAAN;AACZ;;AAED,SAASE,OAAT,CAAiBH,IAAjB,EAAuBC,OAAvB,EAAgC;AAC9B,MAAI,CAACD,IAAL,EAAW;AACT;AACA,QAAI,OAAOI,OAAP,KAAmB,WAAvB,EAAoCA,OAAO,CAACC,IAAR,CAAaJ,OAAb;;AAEpC,QAAI;AACF;AACA;AACA;AACA;AACA;AACA,YAAM,IAAIC,KAAJ,CAAUD,OAAV,CAAN,CANE,CAMwB;AAC3B,KAPD,CAOE,OAAOK,CAAP,EAAU,CAAE;AACf;AACF;;AAED,IAAMC,aAAa,GAAG,EAAtB;;AAEA,SAASC,WAAT,CAAqBC,GAArB,EAA0BT,IAA1B,EAAgCC,OAAhC,EAAyC;AACvC,MAAI,CAACD,IAAD,IAAS,CAACO,aAAa,CAACE,GAAD,CAA3B,EAAkC;AAChCF,IAAAA,aAAa,CAACE,GAAD,CAAb,GAAqB,IAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAAC,KAAD,EAAQF,OAAR,CAA/C,GAAkE,KAAK,CAAvE;AACD;AACF,C,CAAC;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAMY,iBAAiB,GAAG,aAAa/B,aAAa,CAAC,IAAD,CAApD;;AAEA,IAAI4B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,EAAAA,iBAAiB,CAACC,WAAlB,GAAgC,YAAhC;AACD;;AAED,IAAMC,eAAe,GAAG,aAAajC,aAAa,CAAC,IAAD,CAAlD;;AAEA,IAAI4B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCG,EAAAA,eAAe,CAACD,WAAhB,GAA8B,UAA9B;AACD;;AAED,IAAME,YAAY,GAAG,aAAalC,aAAa,CAAC;AAC9CmC,EAAAA,MAAM,EAAE,IADsC;AAE9CC,EAAAA,OAAO,EAAE;AAFqC,CAAD,CAA/C;;AAKA,IAAIR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCI,EAAAA,YAAY,CAACF,WAAb,GAA2B,OAA3B;AACD,C,CAAC;AACF;AACA;;AAGA;AACA;AACA;AACA;AACA;;;AACA,SAASK,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MACEC,QADF,GAKID,IALJ,CACEC,QADF;AAAA,MAEEC,QAFF,GAKIF,IALJ,CAEEE,QAFF;AAAA,MAGEC,cAHF,GAKIH,IALJ,CAGEG,cAHF;AAAA,MAIEC,YAJF,GAKIJ,IALJ,CAIEI,YAJF;AAMA,MAAIC,UAAU,GAAG1C,MAAM,EAAvB;;AAEA,MAAI0C,UAAU,CAACC,OAAX,IAAsB,IAA1B,EAAgC;AAC9BD,IAAAA,UAAU,CAACC,OAAX,GAAqBhC,mBAAmB,CAAC;AACvC6B,MAAAA,cAAc,EAAdA,cADuC;AAEvCC,MAAAA,YAAY,EAAZA;AAFuC,KAAD,CAAxC;AAID;;AAED,MAAIG,OAAO,GAAGF,UAAU,CAACC,OAAzB;;AACA,kBAAwB1C,QAAQ,CAAC;AAC/B4C,IAAAA,MAAM,EAAED,OAAO,CAACC,MADe;AAE/BC,IAAAA,QAAQ,EAAEF,OAAO,CAACE;AAFa,GAAD,CAAhC;AAAA;AAAA,MAAKC,KAAL;AAAA,MAAYC,QAAZ;;AAIA9C,EAAAA,eAAe,CAAC;AAAA,WAAM0C,OAAO,CAACK,MAAR,CAAeD,QAAf,CAAN;AAAA,GAAD,EAAiC,CAACJ,OAAD,CAAjC,CAAf;AACA,SAAO,aAAazC,aAAa,CAAC+C,MAAD,EAAS;AACxCZ,IAAAA,QAAQ,EAAEA,QAD8B;AAExCC,IAAAA,QAAQ,EAAEA,QAF8B;AAGxCO,IAAAA,QAAQ,EAAEC,KAAK,CAACD,QAHwB;AAIxCK,IAAAA,cAAc,EAAEJ,KAAK,CAACF,MAJkB;AAKxCO,IAAAA,SAAS,EAAER;AAL6B,GAAT,CAAjC;AAOD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,MACEC,EADF,GAIID,KAJJ,CACEC,EADF;AAAA,MAEEC,OAFF,GAIIF,KAJJ,CAEEE,OAFF;AAAA,MAGET,KAHF,GAIIO,KAJJ,CAGEP,KAHF;AAKA,GAACU,kBAAkB,EAAnB,GAAwB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ;AACjF;AACA,uEAFyE,CAAjD,GAEiDA,SAAS,CAAC,KAAD,CAFlF,GAE4F,KAAK,CAFjG;AAGAW,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAAC,CAAChB,UAAU,CAAC0B,iBAAD,CAAV,CAA8B4B,MAAhC,EAAwC,4EAA4E,wEAA5E,GAAuJ,0EAA/L,CAA/C,GAA4T,KAAK,CAAjU;AACA,MAAIC,QAAQ,GAAGC,WAAW,EAA1B;AACAvD,EAAAA,SAAS,CAAC,YAAM;AACdsD,IAAAA,QAAQ,CAACJ,EAAD,EAAK;AACXC,MAAAA,OAAO,EAAPA,OADW;AAEXT,MAAAA,KAAK,EAALA;AAFW,KAAL,CAAR;AAID,GALQ,CAAT;AAMA,SAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASc,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,SAAOC,SAAS,CAACD,KAAK,CAACE,OAAP,CAAhB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASC,KAAT,CAAeC,MAAf,EAAuB;AACpBvC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,yEAAyE,kEAAjF,CAAjD,GAAwMA,SAAS,CAAC,KAAD,CAAjN;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASkC,MAAT,CAAgBiB,KAAhB,EAAuB;AACrB,uBAOIA,KAPJ,CACE7B,QADF;AAAA,MACY8B,YADZ,+BAC2B,GAD3B;AAAA,uBAOID,KAPJ,CAEE5B,QAFF;AAAA,MAEEA,QAFF,+BAEa,IAFb;AAAA,MAGY8B,YAHZ,GAOIF,KAPJ,CAGErB,QAHF;AAAA,6BAOIqB,KAPJ,CAIEhB,cAJF;AAAA,MAIEA,cAJF,qCAImBvC,MAAM,CAAC0D,GAJ1B;AAAA,MAKElB,SALF,GAOIe,KAPJ,CAKEf,SALF;AAAA,qBAOIe,KAPJ,CAMET,MANF;AAAA,MAMUa,UANV,6BAMuB,KANvB;AAQA,GAAC,CAACd,kBAAkB,EAApB,GAAyB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,0DAA0D,mDAAlE,CAAjD,GAA0KA,SAAS,CAAC,KAAD,CAA5M,GAAsN,KAAK,CAA3N;AACA,MAAIsB,QAAQ,GAAGkC,iBAAiB,CAACJ,YAAD,CAAhC;AACA,MAAIK,iBAAiB,GAAGnE,OAAO,CAAC;AAAA,WAAO;AACrCgC,MAAAA,QAAQ,EAARA,QADqC;AAErCc,MAAAA,SAAS,EAATA,SAFqC;AAGrCM,MAAAA,MAAM,EAAEa;AAH6B,KAAP;AAAA,GAAD,EAI3B,CAACjC,QAAD,EAAWc,SAAX,EAAsBmB,UAAtB,CAJ2B,CAA/B;;AAMA,MAAI,OAAOF,YAAP,KAAwB,QAA5B,EAAsC;AACpCA,IAAAA,YAAY,GAAGxD,SAAS,CAACwD,YAAD,CAAxB;AACD;;AAED,sBAMIA,YANJ;AAAA,4CACEK,QADF;AAAA,MACEA,QADF,sCACa,GADb;AAAA,2CAEEC,MAFF;AAAA,MAEEA,MAFF,qCAEW,EAFX;AAAA,yCAGEC,IAHF;AAAA,MAGEA,IAHF,mCAGS,EAHT;AAAA,0CAIE7B,KAJF;AAAA,MAIEA,KAJF,oCAIU,IAJV;AAAA,wCAKErB,GALF;AAAA,MAKEA,GALF,kCAKQ,SALR;AAOA,MAAIoB,QAAQ,GAAGxC,OAAO,CAAC,YAAM;AAC3B,QAAIuE,gBAAgB,GAAGC,aAAa,CAACJ,QAAD,EAAWpC,QAAX,CAApC;;AAEA,QAAIuC,gBAAgB,IAAI,IAAxB,EAA8B;AAC5B,aAAO,IAAP;AACD;;AAED,WAAO;AACLH,MAAAA,QAAQ,EAAEG,gBADL;AAELF,MAAAA,MAAM,EAANA,MAFK;AAGLC,MAAAA,IAAI,EAAJA,IAHK;AAIL7B,MAAAA,KAAK,EAALA,KAJK;AAKLrB,MAAAA,GAAG,EAAHA;AALK,KAAP;AAOD,GAdqB,EAcnB,CAACY,QAAD,EAAWoC,QAAX,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmC7B,KAAnC,EAA0CrB,GAA1C,CAdmB,CAAtB;AAeAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAAC0B,QAAQ,IAAI,IAAb,EAAmB,wBAAwBR,QAAxB,GAAmC,mCAAnC,IAA0E,OAAOoC,QAAP,GAAkBC,MAAlB,GAA2BC,IAA3B,GAAkC,wCAA5G,IAAwJ,kDAA3K,CAA/C,GAAgR,KAAK,CAArR;;AAEA,MAAI9B,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,SAAO,aAAa3C,aAAa,CAAC2B,iBAAiB,CAACiD,QAAnB,EAA6B;AAC5DC,IAAAA,KAAK,EAAEP;AADqD,GAA7B,EAE9B,aAAatE,aAAa,CAAC6B,eAAe,CAAC+C,QAAjB,EAA2B;AACtDxC,IAAAA,QAAQ,EAAEA,QAD4C;AAEtDyC,IAAAA,KAAK,EAAE;AACLlC,MAAAA,QAAQ,EAARA,QADK;AAELK,MAAAA,cAAc,EAAdA;AAFK;AAF+C,GAA3B,CAFI,CAAjC;AASD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS8B,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,MACE3C,QADF,GAGI2C,KAHJ,CACE3C,QADF;AAAA,MAEEO,QAFF,GAGIoC,KAHJ,CAEEpC,QAFF;AAIA,SAAOqC,SAAS,CAACC,wBAAwB,CAAC7C,QAAD,CAAzB,EAAqCO,QAArC,CAAhB;AACD,C,CAAC;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASuC,OAAT,CAAiB9B,EAAjB,EAAqB;AACnB,GAACE,kBAAkB,EAAnB,GAAwB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ;AACjF;AACA,sEAFyE,CAAjD,GAEgDA,SAAS,CAAC,KAAD,CAFjF,GAE2F,KAAK,CAFhG;;AAGA,oBAGIZ,UAAU,CAAC0B,iBAAD,CAHd;AAAA,MACEQ,QADF,eACEA,QADF;AAAA,MAEEc,SAFF,eAEEA,SAFF;;AAIA,yBAIIkC,eAAe,CAAC/B,EAAD,CAJnB;AAAA,MACEqB,IADF,oBACEA,IADF;AAAA,MAEEF,QAFF,oBAEEA,QAFF;AAAA,MAGEC,MAHF,oBAGEA,MAHF;;AAKA,MAAIY,cAAc,GAAGb,QAArB;;AAEA,MAAIpC,QAAQ,KAAK,GAAjB,EAAsB;AACpB,QAAIkD,UAAU,GAAGC,aAAa,CAAClC,EAAD,CAA9B;AACA,QAAImC,aAAa,GAAGF,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAACG,QAAX,CAAoB,GAApB,CAA1C;AACAJ,IAAAA,cAAc,GAAGb,QAAQ,KAAK,GAAb,GAAmBpC,QAAQ,IAAIoD,aAAa,GAAG,GAAH,GAAS,EAA1B,CAA3B,GAA2DE,SAAS,CAAC,CAACtD,QAAD,EAAWoC,QAAX,CAAD,CAArF;AACD;;AAED,SAAOtB,SAAS,CAACyC,UAAV,CAAqB;AAC1BnB,IAAAA,QAAQ,EAAEa,cADgB;AAE1BZ,IAAAA,MAAM,EAANA,MAF0B;AAG1BC,IAAAA,IAAI,EAAJA;AAH0B,GAArB,CAAP;AAKD;AACD;AACA;AACA;AACA;AACA;;;AAEA,SAASnB,kBAAT,GAA8B;AAC5B,SAAOrD,UAAU,CAAC4B,eAAD,CAAV,IAA+B,IAAtC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAS8D,WAAT,GAAuB;AACrB,GAACrC,kBAAkB,EAAnB,GAAwB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ;AACjF;AACA,0EAFyE,CAAjD,GAEoDA,SAAS,CAAC,KAAD,CAFrF,GAE+F,KAAK,CAFpG;AAGA,SAAOZ,UAAU,CAAC4B,eAAD,CAAV,CAA4Bc,QAAnC;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASiD,iBAAT,GAA6B;AAC3B,SAAO3F,UAAU,CAAC4B,eAAD,CAAV,CAA4BmB,cAAnC;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAS6C,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,GAACxC,kBAAkB,EAAnB,GAAwB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ;AACjF;AACA,uEAFyE,CAAjD,GAEiDA,SAAS,CAAC,KAAD,CAFlF,GAE4F,KAAK,CAFjG;;AAGA,qBAEI8E,WAAW,EAFf;AAAA,MACEpB,QADF,gBACEA,QADF;;AAGA,SAAOpE,OAAO,CAAC;AAAA,WAAM4F,SAAS,CAACD,OAAD,EAAUvB,QAAV,CAAf;AAAA,GAAD,EAAqC,CAACA,QAAD,EAAWuB,OAAX,CAArC,CAAd;AACD;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASrC,WAAT,GAAuB;AACrB,GAACH,kBAAkB,EAAnB,GAAwB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ;AACjF;AACA,0EAFyE,CAAjD,GAEoDA,SAAS,CAAC,KAAD,CAFrF,GAE+F,KAAK,CAFpG;;AAGA,qBAGIZ,UAAU,CAAC0B,iBAAD,CAHd;AAAA,MACEQ,QADF,gBACEA,QADF;AAAA,MAEEc,SAFF,gBAEEA,SAFF;;AAIA,qBAEIhD,UAAU,CAAC6B,YAAD,CAFd;AAAA,MACEE,OADF,gBACEA,OADF;;AAGA,sBAEI2D,WAAW,EAFf;AAAA,MACYK,gBADZ,iBACEzB,QADF;;AAGA,MAAI0B,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAenE,OAAO,CAACoE,GAAR,CAAY,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,YAAV;AAAA,GAAjB,CAAf,CAAzB;AACA,MAAIC,SAAS,GAAG1G,MAAM,CAAC,KAAD,CAAtB;AACAK,EAAAA,SAAS,CAAC,YAAM;AACdqG,IAAAA,SAAS,CAAC/D,OAAV,GAAoB,IAApB;AACD,GAFQ,CAAT;AAGA,MAAIgB,QAAQ,GAAGpD,WAAW,CAAC,UAAUgD,EAAV,EAAcoD,OAAd,EAAuB;AAChD,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,MAAAA,OAAO,GAAG,EAAV;AACD;;AAEDhF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAACsF,SAAS,CAAC/D,OAAX,EAAoB,iEAAiE,mCAArF,CAA/C,GAA2K,KAAK,CAAhL;AACA,QAAI,CAAC+D,SAAS,CAAC/D,OAAf,EAAwB;;AAExB,QAAI,OAAOY,EAAP,KAAc,QAAlB,EAA4B;AAC1BH,MAAAA,SAAS,CAACwD,EAAV,CAAarD,EAAb;AACA;AACD;;AAED,QAAIsD,IAAI,GAAGC,SAAS,CAACvD,EAAD,EAAK8C,IAAI,CAACU,KAAL,CAAWX,kBAAX,CAAL,EAAqCD,gBAArC,CAApB;;AAEA,QAAI7D,QAAQ,KAAK,GAAjB,EAAsB;AACpBuE,MAAAA,IAAI,CAACnC,QAAL,GAAgBkB,SAAS,CAAC,CAACtD,QAAD,EAAWuE,IAAI,CAACnC,QAAhB,CAAD,CAAzB;AACD;;AAED,KAAC,CAAC,CAACiC,OAAO,CAACnD,OAAV,GAAoBJ,SAAS,CAACI,OAA9B,GAAwCJ,SAAS,CAAC4D,IAAnD,EAAyDH,IAAzD,EAA+DF,OAAO,CAAC5D,KAAvE;AACD,GApByB,EAoBvB,CAACT,QAAD,EAAWc,SAAX,EAAsBgD,kBAAtB,EAA0CD,gBAA1C,CApBuB,CAA1B;AAqBA,SAAOxC,QAAP;AACD;;AACD,IAAMsD,aAAa,GAAG,aAAalH,aAAa,CAAC,IAAD,CAAhD;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASmH,gBAAT,GAA4B;AAC1B,SAAO9G,UAAU,CAAC6G,aAAD,CAAjB;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASlD,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,MAAI9B,MAAM,GAAG9B,UAAU,CAAC6B,YAAD,CAAV,CAAyBC,MAAtC;;AAEA,MAAIA,MAAJ,EAAY;AACV,WAAO,aAAa/B,aAAa,CAAC8G,aAAa,CAAClC,QAAf,EAAyB;AACxDC,MAAAA,KAAK,EAAEhB;AADiD,KAAzB,EAE9B9B,MAF8B,CAAjC;AAGD;;AAED,SAAOA,MAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASiF,SAAT,GAAqB;AACnB,qBAEI/G,UAAU,CAAC6B,YAAD,CAFd;AAAA,MACEE,OADF,gBACEA,OADF;;AAGA,MAAIiF,UAAU,GAAGjF,OAAO,CAACA,OAAO,CAACkF,MAAR,GAAiB,CAAlB,CAAxB;AACA,SAAOD,UAAU,GAAGA,UAAU,CAACE,MAAd,GAAuB,EAAxC;AACD;AACD;AACA;AACA;AACA;AACA;;;AAEA,SAAShC,eAAT,CAAyB/B,EAAzB,EAA6B;AAC3B,qBAEInD,UAAU,CAAC6B,YAAD,CAFd;AAAA,MACEE,OADF,gBACEA,OADF;;AAGA,sBAEI2D,WAAW,EAFf;AAAA,MACYK,gBADZ,iBACEzB,QADF;;AAGA,MAAI0B,kBAAkB,GAAGC,IAAI,CAACC,SAAL,CAAenE,OAAO,CAACoE,GAAR,CAAY,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,YAAV;AAAA,GAAjB,CAAf,CAAzB;AACA,SAAOnG,OAAO,CAAC;AAAA,WAAMwG,SAAS,CAACvD,EAAD,EAAK8C,IAAI,CAACU,KAAL,CAAWX,kBAAX,CAAL,EAAqCD,gBAArC,CAAf;AAAA,GAAD,EAAwE,CAAC5C,EAAD,EAAK6C,kBAAL,EAAyBD,gBAAzB,CAAxE,CAAd;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAShB,SAAT,CAAmBoC,MAAnB,EAA2BC,WAA3B,EAAwC;AACtC,GAAC/D,kBAAkB,EAAnB,GAAwB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ;AACjF;AACA,wEAFyE,CAAjD,GAEkDA,SAAS,CAAC,KAAD,CAFnF,GAE6F,KAAK,CAFlG;;AAGA,qBAEIZ,UAAU,CAAC6B,YAAD,CAFd;AAAA,MACWwF,aADX,gBACEtF,OADF;;AAGA,MAAIiF,UAAU,GAAGK,aAAa,CAACA,aAAa,CAACJ,MAAd,GAAuB,CAAxB,CAA9B;AACA,MAAIK,YAAY,GAAGN,UAAU,GAAGA,UAAU,CAACE,MAAd,GAAuB,EAApD;AACA,MAAIK,cAAc,GAAGP,UAAU,GAAGA,UAAU,CAAC1C,QAAd,GAAyB,GAAxD;AACA,MAAIkD,kBAAkB,GAAGR,UAAU,GAAGA,UAAU,CAACX,YAAd,GAA6B,GAAhE;AACA,MAAIoB,WAAW,GAAGT,UAAU,IAAIA,UAAU,CAACU,KAA3C;;AAEA,MAAInG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIkG,UAAU,GAAGF,WAAW,IAAIA,WAAW,CAAChB,IAA3B,IAAmC,EAApD;AACApF,IAAAA,WAAW,CAACkG,cAAD,EAAiB,CAACE,WAAD,IAAgBE,UAAU,CAACpC,QAAX,CAAoB,GAApB,CAAjC,EAA2D,oEAAoE,OAAOgC,cAAP,GAAwB,0BAAxB,GAAqDI,UAArD,GAAkE,eAAtI,IAAyJ,sEAAzJ,GAAkO,iEAAlO,GAAsS,+BAAtS,IAAyU,4CAA4CA,UAA5C,GAAyD,gBAAlY,KAAuZ,aAAaA,UAAU,KAAK,GAAf,GAAqB,GAArB,GAA2BA,UAAU,GAAG,IAArD,IAA6D,MAApd,CAA3D,CAAX;AACD;;AAED,MAAIC,mBAAmB,GAAGlC,WAAW,EAArC;AACA,MAAIhD,QAAJ;;AAEA,MAAI0E,WAAJ,EAAiB;AACf,QAAIS,qBAAJ;;AAEA,QAAIC,iBAAiB,GAAG,OAAOV,WAAP,KAAuB,QAAvB,GAAkC3G,SAAS,CAAC2G,WAAD,CAA3C,GAA2DA,WAAnF;AACA,MAAEI,kBAAkB,KAAK,GAAvB,KAA+B,CAACK,qBAAqB,GAAGC,iBAAiB,CAACxD,QAA3C,KAAwD,IAAxD,GAA+D,KAAK,CAApE,GAAwEuD,qBAAqB,CAACE,UAAtB,CAAiCP,kBAAjC,CAAvG,CAAF,IAAkKjG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,8FAA8F,iFAA9F,IAAmL,kEAAkE4G,kBAAlE,GAAuF,KAA1Q,KAAoR,oBAAoBM,iBAAiB,CAACxD,QAAtC,GAAiD,sCAArU,CAAR,CAAjD,GAAya1D,SAAS,CAAC,KAAD,CAAplB,GAA8lB,KAAK,CAAnmB;AACA8B,IAAAA,QAAQ,GAAGoF,iBAAX;AACD,GAND,MAMO;AACLpF,IAAAA,QAAQ,GAAGkF,mBAAX;AACD;;AAED,MAAItD,QAAQ,GAAG5B,QAAQ,CAAC4B,QAAT,IAAqB,GAApC;AACA,MAAI0D,iBAAiB,GAAGR,kBAAkB,KAAK,GAAvB,GAA6BlD,QAA7B,GAAwCA,QAAQ,CAAC2D,KAAT,CAAeT,kBAAkB,CAACP,MAAlC,KAA6C,GAA7G;AACA,MAAIlF,OAAO,GAAGmG,WAAW,CAACf,MAAD,EAAS;AAChC7C,IAAAA,QAAQ,EAAE0D;AADsB,GAAT,CAAzB;;AAIA,MAAIzG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCF,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAACyG,WAAW,IAAI1F,OAAO,IAAI,IAA3B,EAAiC,kCAAkCW,QAAQ,CAAC4B,QAA3C,GAAsD5B,QAAQ,CAAC6B,MAA/D,GAAwE7B,QAAQ,CAAC8B,IAAjF,GAAwF,KAAzH,CAA/C,GAAiL,KAAK,CAAtL;AACAjD,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAACe,OAAO,IAAI,IAAX,IAAmBA,OAAO,CAACA,OAAO,CAACkF,MAAR,GAAiB,CAAlB,CAAP,CAA4BS,KAA5B,CAAkCS,OAAlC,KAA8CC,SAAlE,EAA6E,sCAAsC1F,QAAQ,CAAC4B,QAA/C,GAA0D5B,QAAQ,CAAC6B,MAAnE,GAA4E7B,QAAQ,CAAC8B,IAArF,GAA4F,+BAA5F,GAA8H,sGAA3M,CAA/C,GAAoW,KAAK,CAAzW;AACD;;AAED,SAAO6D,cAAc,CAACtG,OAAO,IAAIA,OAAO,CAACoE,GAAR,CAAY,UAAAC,KAAK;AAAA,WAAIkC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBnC,KAAlB,EAAyB;AAC7Ec,MAAAA,MAAM,EAAEoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,YAAlB,EAAgClB,KAAK,CAACc,MAAtC,CADqE;AAE7E5C,MAAAA,QAAQ,EAAEkB,SAAS,CAAC,CAACgC,kBAAD,EAAqBpB,KAAK,CAAC9B,QAA3B,CAAD,CAF0D;AAG7E+B,MAAAA,YAAY,EAAED,KAAK,CAACC,YAAN,KAAuB,GAAvB,GAA6BmB,kBAA7B,GAAkDhC,SAAS,CAAC,CAACgC,kBAAD,EAAqBpB,KAAK,CAACC,YAA3B,CAAD;AAHI,KAAzB,CAAJ;AAAA,GAAjB,CAAZ,EAIhBgB,aAJgB,CAArB;AAKD,C,CAAC;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASrC,wBAAT,CAAkC7C,QAAlC,EAA4C;AAC1C,MAAIgF,MAAM,GAAG,EAAb;AACA/G,EAAAA,QAAQ,CAACoI,OAAT,CAAiBrG,QAAjB,EAA2B,UAAAgG,OAAO,EAAI;AACpC,QAAI,EAAE,aAAa9H,cAAc,CAAC8H,OAAD,CAAjC,EAA4C;AAC1C;AACA;AACA;AACD;;AAED,QAAIA,OAAO,CAACM,IAAR,KAAiBnI,QAArB,EAA+B;AAC7B;AACA6G,MAAAA,MAAM,CAACP,IAAP,CAAY8B,KAAZ,CAAkBvB,MAAlB,EAA0BnC,wBAAwB,CAACmD,OAAO,CAACzE,KAAR,CAAcvB,QAAf,CAAlD;AACA;AACD;;AAED,MAAEgG,OAAO,CAACM,IAAR,KAAiB5E,KAAnB,IAA4BtC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,OAAO,OAAOuH,OAAO,CAACM,IAAf,KAAwB,QAAxB,GAAmCN,OAAO,CAACM,IAA3C,GAAkDN,OAAO,CAACM,IAAR,CAAaE,IAAtE,IAA8E,wGAAtF,CAAjD,GAAmP/H,SAAS,CAAC,KAAD,CAAxR,GAAkS,KAAK,CAAvS;AACA,QAAI8G,KAAK,GAAG;AACVkB,MAAAA,aAAa,EAAET,OAAO,CAACzE,KAAR,CAAckF,aADnB;AAEVT,MAAAA,OAAO,EAAEA,OAAO,CAACzE,KAAR,CAAcyE,OAFb;AAGVU,MAAAA,KAAK,EAAEV,OAAO,CAACzE,KAAR,CAAcmF,KAHX;AAIVpC,MAAAA,IAAI,EAAE0B,OAAO,CAACzE,KAAR,CAAc+C;AAJV,KAAZ;;AAOA,QAAI0B,OAAO,CAACzE,KAAR,CAAcvB,QAAlB,EAA4B;AAC1BuF,MAAAA,KAAK,CAACvF,QAAN,GAAiB6C,wBAAwB,CAACmD,OAAO,CAACzE,KAAR,CAAcvB,QAAf,CAAzC;AACD;;AAEDgF,IAAAA,MAAM,CAACP,IAAP,CAAYc,KAAZ;AACD,GA1BD;AA2BA,SAAOP,MAAP;AACD;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAAS2B,YAAT,CAAsBrC,IAAtB,EAA4BS,MAA5B,EAAoC;AAClC,MAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;AACrBA,IAAAA,MAAM,GAAG,EAAT;AACD;;AAED,SAAOT,IAAI,CAACrD,OAAL,CAAa,SAAb,EAAwB,UAAC2F,CAAD,EAAIzH,GAAJ,EAAY;AACzC,MAAE4F,MAAM,CAAC5F,GAAD,CAAN,IAAe,IAAjB,IAAyBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,gBAAgBU,GAAhB,GAAsB,UAA9B,CAAjD,GAA6FV,SAAS,CAAC,KAAD,CAA/H,GAAyI,KAAK,CAA9I;AACA,WAAOsG,MAAM,CAAC5F,GAAD,CAAb;AACD,GAHM,EAGJ8B,OAHI,CAGI,QAHJ,EAGc,UAAA2F,CAAC;AAAA,WAAI7B,MAAM,CAAC,GAAD,CAAN,IAAe,IAAf,GAAsB,EAAtB,GAA2BA,MAAM,CAAC,GAAD,CAAN,CAAY9D,OAAZ,CAAoB,MAApB,EAA4B,GAA5B,CAA/B;AAAA,GAHf,CAAP;AAID;AACD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAAS8E,WAAT,CAAqBf,MAArB,EAA6BC,WAA7B,EAA0ClF,QAA1C,EAAoD;AAClD,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,GAAX;AACD;;AAED,MAAIQ,QAAQ,GAAG,OAAO0E,WAAP,KAAuB,QAAvB,GAAkC3G,SAAS,CAAC2G,WAAD,CAA3C,GAA2DA,WAA1E;AACA,MAAI9C,QAAQ,GAAGI,aAAa,CAAChC,QAAQ,CAAC4B,QAAT,IAAqB,GAAtB,EAA2BpC,QAA3B,CAA5B;;AAEA,MAAIoC,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,MAAI0E,QAAQ,GAAGC,aAAa,CAAC9B,MAAD,CAA5B;AACA+B,EAAAA,iBAAiB,CAACF,QAAD,CAAjB;AACA,MAAIjH,OAAO,GAAG,IAAd;;AAEA,OAAK,IAAIoH,CAAC,GAAG,CAAb,EAAgBpH,OAAO,IAAI,IAAX,IAAmBoH,CAAC,GAAGH,QAAQ,CAAC/B,MAAhD,EAAwD,EAAEkC,CAA1D,EAA6D;AAC3DpH,IAAAA,OAAO,GAAGqH,gBAAgB,CAACJ,QAAQ,CAACG,CAAD,CAAT,EAAc7E,QAAd,CAA1B;AACD;;AAED,SAAOvC,OAAP;AACD;;AAED,SAASkH,aAAT,CAAuB9B,MAAvB,EAA+B6B,QAA/B,EAAyCK,WAAzC,EAAsD1B,UAAtD,EAAkE;AAChE,MAAIqB,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAED,MAAIK,WAAW,KAAK,KAAK,CAAzB,EAA4B;AAC1BA,IAAAA,WAAW,GAAG,EAAd;AACD;;AAED,MAAI1B,UAAU,KAAK,KAAK,CAAxB,EAA2B;AACzBA,IAAAA,UAAU,GAAG,EAAb;AACD;;AAEDR,EAAAA,MAAM,CAACqB,OAAP,CAAe,UAACd,KAAD,EAAQmB,KAAR,EAAkB;AAC/B,QAAIS,IAAI,GAAG;AACTC,MAAAA,YAAY,EAAE7B,KAAK,CAACjB,IAAN,IAAc,EADnB;AAETmC,MAAAA,aAAa,EAAElB,KAAK,CAACkB,aAAN,KAAwB,IAF9B;AAGTY,MAAAA,aAAa,EAAEX,KAHN;AAITnB,MAAAA,KAAK,EAALA;AAJS,KAAX;;AAOA,QAAI4B,IAAI,CAACC,YAAL,CAAkBxB,UAAlB,CAA6B,GAA7B,CAAJ,EAAuC;AACrC,OAACuB,IAAI,CAACC,YAAL,CAAkBxB,UAAlB,CAA6BJ,UAA7B,CAAD,GAA4CpG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,2BAA2B0I,IAAI,CAACC,YAAhC,GAA+C,uBAA/C,IAA0E,OAAO5B,UAAP,GAAoB,gDAA9F,IAAkJ,6DAA1J,CAAjD,GAA4Q/G,SAAS,CAAC,KAAD,CAAjU,GAA2U,KAAK,CAAhV;AACA0I,MAAAA,IAAI,CAACC,YAAL,GAAoBD,IAAI,CAACC,YAAL,CAAkBtB,KAAlB,CAAwBN,UAAU,CAACV,MAAnC,CAApB;AACD;;AAED,QAAIR,IAAI,GAAGjB,SAAS,CAAC,CAACmC,UAAD,EAAa2B,IAAI,CAACC,YAAlB,CAAD,CAApB;AACA,QAAIE,UAAU,GAAGJ,WAAW,CAACK,MAAZ,CAAmBJ,IAAnB,CAAjB,CAd+B,CAcY;AAC3C;AACA;;AAEA,QAAI5B,KAAK,CAACvF,QAAN,IAAkBuF,KAAK,CAACvF,QAAN,CAAe8E,MAAf,GAAwB,CAA9C,EAAiD;AAC/C,QAAES,KAAK,CAACmB,KAAN,KAAgB,IAAlB,IAA0BtH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,SAAS,CAAC,KAAD,EAAQ,6DAA6D,wCAAwC6F,IAAxC,GAA+C,KAA5G,CAAR,CAAjD,GAA+K7F,SAAS,CAAC,KAAD,CAAlN,GAA4N,KAAK,CAAjO;AACAqI,MAAAA,aAAa,CAACvB,KAAK,CAACvF,QAAP,EAAiB6G,QAAjB,EAA2BS,UAA3B,EAAuChD,IAAvC,CAAb;AACD,KArB8B,CAqB7B;AACF;;;AAGA,QAAIiB,KAAK,CAACjB,IAAN,IAAc,IAAd,IAAsB,CAACiB,KAAK,CAACmB,KAAjC,EAAwC;AACtC;AACD;;AAEDG,IAAAA,QAAQ,CAACpC,IAAT,CAAc;AACZH,MAAAA,IAAI,EAAJA,IADY;AAEZkD,MAAAA,KAAK,EAAEC,YAAY,CAACnD,IAAD,EAAOiB,KAAK,CAACmB,KAAb,CAFP;AAGZY,MAAAA,UAAU,EAAVA;AAHY,KAAd;AAKD,GAlCD;AAmCA,SAAOT,QAAP;AACD;;AAED,SAASE,iBAAT,CAA2BF,QAA3B,EAAqC;AACnCA,EAAAA,QAAQ,CAACa,IAAT,CAAc,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,CAACH,KAAF,KAAYI,CAAC,CAACJ,KAAd,GAAsBI,CAAC,CAACJ,KAAF,GAAUG,CAAC,CAACH,KAAlC,CAAwC;AAAxC,MACtBK,cAAc,CAACF,CAAC,CAACL,UAAF,CAAatD,GAAb,CAAiB,UAAAmD,IAAI;AAAA,aAAIA,IAAI,CAACE,aAAT;AAAA,KAArB,CAAD,EAA+CO,CAAC,CAACN,UAAF,CAAatD,GAAb,CAAiB,UAAAmD,IAAI;AAAA,aAAIA,IAAI,CAACE,aAAT;AAAA,KAArB,CAA/C,CADF;AAAA,GAAd;AAED;;AAED,IAAMS,OAAO,GAAG,QAAhB;AACA,IAAMC,mBAAmB,GAAG,CAA5B;AACA,IAAMC,eAAe,GAAG,CAAxB;AACA,IAAMC,iBAAiB,GAAG,CAA1B;AACA,IAAMC,kBAAkB,GAAG,EAA3B;AACA,IAAMC,YAAY,GAAG,CAAC,CAAtB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,CAAC;AAAA,SAAIA,CAAC,KAAK,GAAV;AAAA,CAAjB;;AAEA,SAASZ,YAAT,CAAsBnD,IAAtB,EAA4BoC,KAA5B,EAAmC;AACjC,MAAI4B,QAAQ,GAAGhE,IAAI,CAACiE,KAAL,CAAW,GAAX,CAAf;AACA,MAAIC,YAAY,GAAGF,QAAQ,CAACxD,MAA5B;;AAEA,MAAIwD,QAAQ,CAACG,IAAT,CAAcL,OAAd,CAAJ,EAA4B;AAC1BI,IAAAA,YAAY,IAAIL,YAAhB;AACD;;AAED,MAAIzB,KAAJ,EAAW;AACT8B,IAAAA,YAAY,IAAIR,eAAhB;AACD;;AAED,SAAOM,QAAQ,CAACI,MAAT,CAAgB,UAAAL,CAAC;AAAA,WAAI,CAACD,OAAO,CAACC,CAAD,CAAZ;AAAA,GAAjB,EAAkCM,MAAlC,CAAyC,UAACnB,KAAD,EAAQoB,OAAR;AAAA,WAAoBpB,KAAK,IAAIM,OAAO,CAACe,IAAR,CAAaD,OAAb,IAAwBb,mBAAxB,GAA8Ca,OAAO,KAAK,EAAZ,GAAiBX,iBAAjB,GAAqCC,kBAAvF,CAAzB;AAAA,GAAzC,EAA8KM,YAA9K,CAAP;AACD;;AAED,SAASX,cAAT,CAAwBF,CAAxB,EAA2BC,CAA3B,EAA8B;AAC5B,MAAIkB,QAAQ,GAAGnB,CAAC,CAAC7C,MAAF,KAAa8C,CAAC,CAAC9C,MAAf,IAAyB6C,CAAC,CAAC7B,KAAF,CAAQ,CAAR,EAAW,CAAC,CAAZ,EAAeiD,KAAf,CAAqB,UAACC,CAAD,EAAIhC,CAAJ;AAAA,WAAUgC,CAAC,KAAKpB,CAAC,CAACZ,CAAD,CAAjB;AAAA,GAArB,CAAxC;AACA,SAAO8B,QAAQ,GAAG;AAClB;AACA;AACA;AACAnB,EAAAA,CAAC,CAACA,CAAC,CAAC7C,MAAF,GAAW,CAAZ,CAAD,GAAkB8C,CAAC,CAACA,CAAC,CAAC9C,MAAF,GAAW,CAAZ,CAJJ,GAIqB;AACpC;AACA,GANA;AAOD;;AAED,SAASmC,gBAAT,CAA0BgC,MAA1B,EAAkC9G,QAAlC,EAA4C;AAC1C,MACEmF,UADF,GAEI2B,MAFJ,CACE3B,UADF;AAGA,MAAI4B,aAAa,GAAG,EAApB;AACA,MAAIC,eAAe,GAAG,GAAtB;AACA,MAAIvJ,OAAO,GAAG,EAAd;;AAEA,OAAK,IAAIoH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,UAAU,CAACxC,MAA/B,EAAuC,EAAEkC,CAAzC,EAA4C;AAC1C,QAAIG,IAAI,GAAGG,UAAU,CAACN,CAAD,CAArB;AACA,QAAIoC,GAAG,GAAGpC,CAAC,KAAKM,UAAU,CAACxC,MAAX,GAAoB,CAApC;AACA,QAAIe,iBAAiB,GAAGsD,eAAe,KAAK,GAApB,GAA0BhH,QAA1B,GAAqCA,QAAQ,CAAC2D,KAAT,CAAeqD,eAAe,CAACrE,MAA/B,KAA0C,GAAvG;AACA,QAAIb,KAAK,GAAGN,SAAS,CAAC;AACpBW,MAAAA,IAAI,EAAE6C,IAAI,CAACC,YADS;AAEpBX,MAAAA,aAAa,EAAEU,IAAI,CAACV,aAFA;AAGpB2C,MAAAA,GAAG,EAAHA;AAHoB,KAAD,EAIlBvD,iBAJkB,CAArB;AAKA,QAAI,CAAC5B,KAAL,EAAY,OAAO,IAAP;AACZkC,IAAAA,MAAM,CAACC,MAAP,CAAc8C,aAAd,EAA6BjF,KAAK,CAACc,MAAnC;AACA,QAAIQ,KAAK,GAAG4B,IAAI,CAAC5B,KAAjB;AACA3F,IAAAA,OAAO,CAAC6E,IAAR,CAAa;AACXM,MAAAA,MAAM,EAAEmE,aADG;AAEX/G,MAAAA,QAAQ,EAAEkB,SAAS,CAAC,CAAC8F,eAAD,EAAkBlF,KAAK,CAAC9B,QAAxB,CAAD,CAFR;AAGX+B,MAAAA,YAAY,EAAEjC,iBAAiB,CAACoB,SAAS,CAAC,CAAC8F,eAAD,EAAkBlF,KAAK,CAACC,YAAxB,CAAD,CAAV,CAHpB;AAIXqB,MAAAA,KAAK,EAALA;AAJW,KAAb;;AAOA,QAAItB,KAAK,CAACC,YAAN,KAAuB,GAA3B,EAAgC;AAC9BiF,MAAAA,eAAe,GAAG9F,SAAS,CAAC,CAAC8F,eAAD,EAAkBlF,KAAK,CAACC,YAAxB,CAAD,CAA3B;AACD;AACF;;AAED,SAAOtE,OAAP;AACD;AACD;AACA;AACA;;;AAGA,SAASyJ,aAAT,CAAuBzJ,OAAvB,EAAgC;AAC9B,SAAOsG,cAAc,CAACtG,OAAD,CAArB;AACD;;AAED,SAASsG,cAAT,CAAwBtG,OAAxB,EAAiCsF,aAAjC,EAAgD;AAC9C,MAAIA,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAC5BA,IAAAA,aAAa,GAAG,EAAhB;AACD;;AAED,MAAItF,OAAO,IAAI,IAAf,EAAqB,OAAO,IAAP;AACrB,SAAOA,OAAO,CAAC0J,WAAR,CAAoB,UAAC3J,MAAD,EAASsE,KAAT,EAAgByC,KAAhB,EAA0B;AACnD,WAAO,aAAa9I,aAAa,CAAC8B,YAAY,CAAC8C,QAAd,EAAwB;AACvDxC,MAAAA,QAAQ,EAAEiE,KAAK,CAACsB,KAAN,CAAYS,OAAZ,KAAwBC,SAAxB,GAAoChC,KAAK,CAACsB,KAAN,CAAYS,OAAhD,GAA0DrG,MADb;AAEvD8C,MAAAA,KAAK,EAAE;AACL9C,QAAAA,MAAM,EAANA,MADK;AAELC,QAAAA,OAAO,EAAEsF,aAAa,CAACqC,MAAd,CAAqB3H,OAAO,CAACkG,KAAR,CAAc,CAAd,EAAiBY,KAAK,GAAG,CAAzB,CAArB;AAFJ;AAFgD,KAAxB,CAAjC;AAOD,GARM,EAQJ,IARI,CAAP;AASD;AACD;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAS/C,SAAT,CAAmBD,OAAnB,EAA4BvB,QAA5B,EAAsC;AACpC,MAAI,OAAOuB,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,IAAAA,OAAO,GAAG;AACRY,MAAAA,IAAI,EAAEZ,OADE;AAER+C,MAAAA,aAAa,EAAE,KAFP;AAGR2C,MAAAA,GAAG,EAAE;AAHG,KAAV;AAKD;;AAED,qBAA4BG,WAAW,CAAC7F,OAAO,CAACY,IAAT,EAAeZ,OAAO,CAAC+C,aAAvB,EAAsC/C,OAAO,CAAC0F,GAA9C,CAAvC;AAAA;AAAA,MAAKI,OAAL;AAAA,MAAcC,UAAd;;AACA,MAAIxF,KAAK,GAAG9B,QAAQ,CAAC8B,KAAT,CAAeuF,OAAf,CAAZ;AACA,MAAI,CAACvF,KAAL,EAAY,OAAO,IAAP;AACZ,MAAIkF,eAAe,GAAGlF,KAAK,CAAC,CAAD,CAA3B;AACA,MAAIC,YAAY,GAAGiF,eAAe,CAAClI,OAAhB,CAAwB,SAAxB,EAAmC,IAAnC,CAAnB;AACA,MAAIyI,aAAa,GAAGzF,KAAK,CAAC6B,KAAN,CAAY,CAAZ,CAApB;AACA,MAAIf,MAAM,GAAG0E,UAAU,CAACd,MAAX,CAAkB,UAACgB,IAAD,EAAOC,SAAP,EAAkBlD,KAAlB,EAA4B;AACzD;AACA;AACA,QAAIkD,SAAS,KAAK,GAAlB,EAAuB;AACrB,UAAIC,UAAU,GAAGH,aAAa,CAAChD,KAAD,CAAb,IAAwB,EAAzC;AACAxC,MAAAA,YAAY,GAAGiF,eAAe,CAACrD,KAAhB,CAAsB,CAAtB,EAAyBqD,eAAe,CAACrE,MAAhB,GAAyB+E,UAAU,CAAC/E,MAA7D,EAAqE7D,OAArE,CAA6E,SAA7E,EAAwF,IAAxF,CAAf;AACD;;AAED0I,IAAAA,IAAI,CAACC,SAAD,CAAJ,GAAkBE,wBAAwB,CAACJ,aAAa,CAAChD,KAAD,CAAb,IAAwB,EAAzB,EAA6BkD,SAA7B,CAA1C;AACA,WAAOD,IAAP;AACD,GAVY,EAUV,EAVU,CAAb;AAWA,SAAO;AACL5E,IAAAA,MAAM,EAANA,MADK;AAEL5C,IAAAA,QAAQ,EAAEgH,eAFL;AAGLjF,IAAAA,YAAY,EAAZA,YAHK;AAILR,IAAAA,OAAO,EAAPA;AAJK,GAAP;AAMD;;AAED,SAAS6F,WAAT,CAAqBjF,IAArB,EAA2BmC,aAA3B,EAA0C2C,GAA1C,EAA+C;AAC7C,MAAI3C,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAC5BA,IAAAA,aAAa,GAAG,KAAhB;AACD;;AAED,MAAI2C,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBA,IAAAA,GAAG,GAAG,IAAN;AACD;;AAEDhK,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAACyF,IAAI,KAAK,GAAT,IAAgB,CAACA,IAAI,CAAClB,QAAL,CAAc,GAAd,CAAjB,IAAuCkB,IAAI,CAAClB,QAAL,CAAc,IAAd,CAAxC,EAA6D,kBAAkBkB,IAAlB,GAAyB,mCAAzB,IAAgE,OAAOA,IAAI,CAACrD,OAAL,CAAa,KAAb,EAAoB,IAApB,CAAP,GAAmC,oCAAnG,IAA2I,kEAA3I,IAAiN,uCAAuCqD,IAAI,CAACrD,OAAL,CAAa,KAAb,EAAoB,IAApB,CAAvC,GAAmE,KAApR,CAA7D,CAA/C,GAA0Y,KAAK,CAA/Y;AACA,MAAIwI,UAAU,GAAG,EAAjB;AACA,MAAIM,YAAY,GAAG,MAAMzF,IAAI,CAACrD,OAAL,CAAa,SAAb,EAAwB,EAAxB,EAA4B;AAA5B,GACxBA,OADwB,CAChB,MADgB,EACR,GADQ,EACH;AADG,GAExBA,OAFwB,CAEhB,qBAFgB,EAEO,MAFP,EAEe;AAFf,GAGxBA,OAHwB,CAGhB,SAHgB,EAGL,UAAC2F,CAAD,EAAIgD,SAAJ,EAAkB;AACpCH,IAAAA,UAAU,CAAChF,IAAX,CAAgBmF,SAAhB;AACA,WAAO,WAAP;AACD,GANwB,CAAzB;;AAQA,MAAItF,IAAI,CAAClB,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACtBqG,IAAAA,UAAU,CAAChF,IAAX,CAAgB,GAAhB;AACAsF,IAAAA,YAAY,IAAIzF,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,IAAzB,GAAgC,OAAhC,CAAwC;AAAxC,MACd,mBADF,CAFsB,CAGC;AACxB,GAJD,MAIO;AACLyF,IAAAA,YAAY,IAAIX,GAAG,GAAG,OAAH,CAAW;AAAX,MACjB;AACF;AACA;AACA;AACA;AACA;AACA,0CAPA;AAQD;;AAED,MAAII,OAAO,GAAG,IAAIQ,MAAJ,CAAWD,YAAX,EAAyBtD,aAAa,GAAGR,SAAH,GAAe,GAArD,CAAd;AACA,SAAO,CAACuD,OAAD,EAAUC,UAAV,CAAP;AACD;;AAED,SAASK,wBAAT,CAAkCrH,KAAlC,EAAyCmH,SAAzC,EAAoD;AAClD,MAAI;AACF,WAAOK,kBAAkB,CAACxH,KAAD,CAAzB;AACD,GAFD,CAEE,OAAOyH,KAAP,EAAc;AACd9K,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,OAAO,CAAC,KAAD,EAAQ,mCAAmC+K,SAAnC,GAA+C,gCAA/C,IAAmF,mBAAmBnH,KAAnB,GAA2B,iDAA9G,KAAoK,qCAAqCyH,KAArC,GAA6C,IAAjN,CAAR,CAA/C,GAAiR,KAAK,CAAtR;AACA,WAAOzH,KAAP;AACD;AACF;AACD;AACA;AACA;AACA;AACA;;;AAGA,SAAS0H,WAAT,CAAqBnJ,EAArB,EAAyBoJ,YAAzB,EAAuC;AACrC,MAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;AAC3BA,IAAAA,YAAY,GAAG,GAAf;AACD;;AAED,cAII,OAAOpJ,EAAP,KAAc,QAAd,GAAyB1C,SAAS,CAAC0C,EAAD,CAAlC,GAAyCA,EAJ7C;AAAA,MACYiC,UADZ,SACEd,QADF;AAAA,2BAEEC,MAFF;AAAA,MAEEA,MAFF,6BAEW,EAFX;AAAA,yBAGEC,IAHF;AAAA,MAGEA,IAHF,2BAGS,EAHT;;AAKA,MAAIF,QAAQ,GAAGc,UAAU,GAAGA,UAAU,CAAC2C,UAAX,CAAsB,GAAtB,IAA6B3C,UAA7B,GAA0CoH,eAAe,CAACpH,UAAD,EAAamH,YAAb,CAA5D,GAAyFA,YAAlH;AACA,SAAO;AACLjI,IAAAA,QAAQ,EAARA,QADK;AAELC,IAAAA,MAAM,EAAEkI,eAAe,CAAClI,MAAD,CAFlB;AAGLC,IAAAA,IAAI,EAAEkI,aAAa,CAAClI,IAAD;AAHd,GAAP;AAKD;;AAED,SAASgI,eAAT,CAAyBjD,YAAzB,EAAuCgD,YAAvC,EAAqD;AACnD,MAAI9B,QAAQ,GAAG8B,YAAY,CAACnJ,OAAb,CAAqB,MAArB,EAA6B,EAA7B,EAAiCsH,KAAjC,CAAuC,GAAvC,CAAf;AACA,MAAIiC,gBAAgB,GAAGpD,YAAY,CAACmB,KAAb,CAAmB,GAAnB,CAAvB;AACAiC,EAAAA,gBAAgB,CAACnE,OAAjB,CAAyB,UAAAuC,OAAO,EAAI;AAClC,QAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACA,UAAIN,QAAQ,CAACxD,MAAT,GAAkB,CAAtB,EAAyBwD,QAAQ,CAACmC,GAAT;AAC1B,KAHD,MAGO,IAAI7B,OAAO,KAAK,GAAhB,EAAqB;AAC1BN,MAAAA,QAAQ,CAAC7D,IAAT,CAAcmE,OAAd;AACD;AACF,GAPD;AAQA,SAAON,QAAQ,CAACxD,MAAT,GAAkB,CAAlB,GAAsBwD,QAAQ,CAACoC,IAAT,CAAc,GAAd,CAAtB,GAA2C,GAAlD;AACD;;AAED,SAASnG,SAAT,CAAmBoG,KAAnB,EAA0BC,cAA1B,EAA0ChH,gBAA1C,EAA4D;AAC1D,MAAI5C,EAAE,GAAG,OAAO2J,KAAP,KAAiB,QAAjB,GAA4BrM,SAAS,CAACqM,KAAD,CAArC,GAA+CA,KAAxD;AACA,MAAI1H,UAAU,GAAG0H,KAAK,KAAK,EAAV,IAAgB3J,EAAE,CAACmB,QAAH,KAAgB,EAAhC,GAAqC,GAArC,GAA2CnB,EAAE,CAACmB,QAA/D,CAF0D,CAEe;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAI0I,IAAJ;;AAEA,MAAI5H,UAAU,IAAI,IAAlB,EAAwB;AACtB4H,IAAAA,IAAI,GAAGjH,gBAAP;AACD,GAFD,MAEO;AACL,QAAIkH,kBAAkB,GAAGF,cAAc,CAAC9F,MAAf,GAAwB,CAAjD;;AAEA,QAAI7B,UAAU,CAAC2C,UAAX,CAAsB,IAAtB,CAAJ,EAAiC;AAC/B,UAAImF,UAAU,GAAG9H,UAAU,CAACsF,KAAX,CAAiB,GAAjB,CAAjB,CAD+B,CACS;AACxC;AACA;;AAEA,aAAOwC,UAAU,CAAC,CAAD,CAAV,KAAkB,IAAzB,EAA+B;AAC7BA,QAAAA,UAAU,CAACC,KAAX;AACAF,QAAAA,kBAAkB,IAAI,CAAtB;AACD;;AAED9J,MAAAA,EAAE,CAACmB,QAAH,GAAc4I,UAAU,CAACL,IAAX,CAAgB,GAAhB,CAAd;AACD,KAdI,CAcH;AACF;;;AAGAG,IAAAA,IAAI,GAAGC,kBAAkB,IAAI,CAAtB,GAA0BF,cAAc,CAACE,kBAAD,CAAxC,GAA+D,GAAtE;AACD;;AAED,MAAIxG,IAAI,GAAG6F,WAAW,CAACnJ,EAAD,EAAK6J,IAAL,CAAtB,CAnC0D,CAmCxB;;AAElC,MAAI5H,UAAU,IAAIA,UAAU,KAAK,GAA7B,IAAoCA,UAAU,CAACG,QAAX,CAAoB,GAApB,CAApC,IAAgE,CAACkB,IAAI,CAACnC,QAAL,CAAciB,QAAd,CAAuB,GAAvB,CAArE,EAAkG;AAChGkB,IAAAA,IAAI,CAACnC,QAAL,IAAiB,GAAjB;AACD;;AAED,SAAOmC,IAAP;AACD;;AAED,SAASpB,aAAT,CAAuBlC,EAAvB,EAA2B;AACzB;AACA,SAAOA,EAAE,KAAK,EAAP,IAAaA,EAAE,CAACmB,QAAH,KAAgB,EAA7B,GAAkC,GAAlC,GAAwC,OAAOnB,EAAP,KAAc,QAAd,GAAyB1C,SAAS,CAAC0C,EAAD,CAAT,CAAcmB,QAAvC,GAAkDnB,EAAE,CAACmB,QAApG;AACD;;AAED,SAASI,aAAT,CAAuBJ,QAAvB,EAAiCpC,QAAjC,EAA2C;AACzC,MAAIA,QAAQ,KAAK,GAAjB,EAAsB,OAAOoC,QAAP;;AAEtB,MAAI,CAACA,QAAQ,CAAC8I,WAAT,GAAuBrF,UAAvB,CAAkC7F,QAAQ,CAACkL,WAAT,EAAlC,CAAL,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,MAAIC,QAAQ,GAAG/I,QAAQ,CAACgJ,MAAT,CAAgBpL,QAAQ,CAAC+E,MAAzB,CAAf;;AAEA,MAAIoG,QAAQ,IAAIA,QAAQ,KAAK,GAA7B,EAAkC;AAChC;AACA,WAAO,IAAP;AACD;;AAED,SAAO/I,QAAQ,CAAC2D,KAAT,CAAe/F,QAAQ,CAAC+E,MAAxB,KAAmC,GAA1C;AACD;;AAED,IAAMzB,SAAS,GAAG,SAAZA,SAAY,CAAA+H,KAAK;AAAA,SAAIA,KAAK,CAACV,IAAN,CAAW,GAAX,EAAgBzJ,OAAhB,CAAwB,QAAxB,EAAkC,GAAlC,CAAJ;AAAA,CAAvB;;AAEA,IAAMgB,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAE,QAAQ;AAAA,SAAIA,QAAQ,CAAClB,OAAT,CAAiB,MAAjB,EAAyB,EAAzB,EAA6BA,OAA7B,CAAqC,MAArC,EAA6C,GAA7C,CAAJ;AAAA,CAAlC;;AAEA,IAAMqJ,eAAe,GAAG,SAAlBA,eAAkB,CAAAlI,MAAM;AAAA,SAAI,CAACA,MAAD,IAAWA,MAAM,KAAK,GAAtB,GAA4B,EAA5B,GAAiCA,MAAM,CAACwD,UAAP,CAAkB,GAAlB,IAAyBxD,MAAzB,GAAkC,MAAMA,MAA7E;AAAA,CAA9B;;AAEA,IAAMmI,aAAa,GAAG,SAAhBA,aAAgB,CAAAlI,IAAI;AAAA,SAAI,CAACA,IAAD,IAASA,IAAI,KAAK,GAAlB,GAAwB,EAAxB,GAA6BA,IAAI,CAACuD,UAAL,CAAgB,GAAhB,IAAuBvD,IAAvB,GAA8B,MAAMA,IAArE;AAAA,CAA1B,C,CAAqG;;;AAErG,SAASxC,YAAT,EAAuBiB,QAAvB,EAAiCQ,MAAjC,EAAyCI,KAAzC,EAAgDf,MAAhD,EAAwD+B,MAAxD,EAAgEjD,eAAe,IAAI4L,sBAAnF,EAA2G9L,iBAAiB,IAAI+L,wBAAhI,EAA0J5L,YAAY,IAAI6L,mBAA1K,EAA+L1I,wBAA/L,EAAyN8D,YAAzN,EAAuOhD,SAAvO,EAAkPoC,WAAlP,EAA+PsD,aAA/P,EAA8Qc,WAA9Q,EAA2RrH,OAA3R,EAAoS5B,kBAApS,EAAwTqC,WAAxT,EAAqUE,QAArU,EAA+UpC,WAA/U,EAA4VmC,iBAA5V,EAA+WhC,SAA/W,EAA0XmD,gBAA1X,EAA4YC,SAA5Y,EAAuZ7B,eAAvZ,EAAwaH,SAAxa","names":["invariant","cond","message","Error","warning","console","warn","e","alreadyWarned","warningOnce","key","process","NavigationContext","React","displayName","LocationContext","RouteContext","outlet","matches","MemoryRouter","basename","children","initialEntries","initialIndex","historyRef","current","createMemoryHistory","history","action","location","state","setState","listen","React.createElement","Router","navigationType","navigator","Navigate","to","replace","useInRouterContext","static","navigate","useNavigate","Outlet","props","useOutlet","context","Route","_props","basenameProp","locationProp","NavigationType","Pop","staticProp","normalizePathname","navigationContext","parsePath","pathname","search","hash","trailingPathname","stripBasename","Provider","value","Routes","useRoutes","createRoutesFromChildren","useHref","useResolvedPath","joinedPathname","toPathname","getToPathname","endsWithSlash","endsWith","joinPaths","createHref","useLocation","useNavigationType","useMatch","pattern","matchPath","locationPathname","routePathnamesJson","JSON","stringify","map","match","pathnameBase","activeRef","options","go","path","resolveTo","parse","push","OutletContext","useOutletContext","useParams","routeMatch","length","params","routes","locationArg","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","locationFromContext","parsedLocationArg","_parsedLocationArg$pa","startsWith","remainingPathname","slice","matchRoutes","element","undefined","_renderMatches","Object","assign","forEach","type","apply","name","caseSensitive","index","generatePath","_","branches","flattenRoutes","rankRouteBranches","i","matchRouteBranch","parentsMeta","meta","relativePath","childrenIndex","routesMeta","concat","score","computeScore","sort","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","segments","split","initialScore","some","filter","reduce","segment","test","siblings","every","n","branch","matchedParams","matchedPathname","end","renderMatches","reduceRight","compilePath","matcher","paramNames","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","regexpSource","RegExp","decodeURIComponent","error","resolvePath","fromPathname","resolvePathname","normalizeSearch","normalizeHash","relativeSegments","pop","join","toArg","routePathnames","from","routePathnameIndex","toSegments","shift","toLowerCase","nextChar","charAt","paths"],"sources":["C:\\Users\\Daniel\\Desktop\\DGS web\\packages\\react-router\\index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type {\n  Hash,\n  History,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Path,\n  Pathname,\n  Search,\n  To,\n} from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n  createPath,\n} from \"history\";\n\nexport { parsePath, createPath, NavigationType };\nexport type { Hash, Location, Path, Pathname, Search, To };\n\nfunction invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nfunction warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// CONTEXT\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nconst NavigationContext = React.createContext<NavigationContextObject>(null!);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nconst LocationContext = React.createContext<LocationContextObject>(null!);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nconst RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n///////////////////////////////////////////////////////////////////////////////\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// HOOKS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\ntype ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\nfunction _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nfunction getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nfunction stripBasename(pathname: string, basename: string): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nconst joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nconst normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n};\n"]},"metadata":{},"sourceType":"module"}