{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Daniel/Desktop/DGS web/DGS-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/Daniel/Desktop/DGS web/DGS-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Daniel/Desktop/DGS web/DGS-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"C:/Users/Daniel/Desktop/DGS web/DGS-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"C:/Users/Daniel/Desktop/DGS web/DGS-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Daniel/Desktop/DGS web/DGS-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar _PLATFORM_LOG_STRING, _ERRORS;\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\DGS web\\\\DGS-web\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual, base64Encode, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar PlatformLoggerServiceImpl = /*#__PURE__*/function () {\n  function PlatformLoggerServiceImpl(container) {\n    _classCallCheck(this, PlatformLoggerServiceImpl);\n\n    this.container = container;\n  } // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n\n\n  _createClass(PlatformLoggerServiceImpl, [{\n    key: \"getPlatformInfoString\",\n    value: function getPlatformInfoString() {\n      var providers = this.container.getProviders(); // Loop through providers and get library/version pairs from any that are\n      // version components.\n\n      return providers.map(function (provider) {\n        if (isVersionServiceProvider(provider)) {\n          var service = provider.getImmediate();\n          return \"\".concat(service.library, \"/\").concat(service.version);\n        } else {\n          return null;\n        }\n      }).filter(function (logString) {\n        return logString;\n      }).join(' ');\n    }\n  }]);\n\n  return PlatformLoggerServiceImpl;\n}();\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\n\n\nfunction isVersionServiceProvider(provider) {\n  var component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\"\n  /* VERSION */\n  ;\n}\n\nvar name$o = \"@firebase/app\";\nvar version$1 = \"0.7.18\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar logger = new Logger('@firebase/app');\nvar name$n = \"@firebase/app-compat\";\nvar name$m = \"@firebase/analytics-compat\";\nvar name$l = \"@firebase/analytics\";\nvar name$k = \"@firebase/app-check-compat\";\nvar name$j = \"@firebase/app-check\";\nvar name$i = \"@firebase/auth\";\nvar name$h = \"@firebase/auth-compat\";\nvar name$g = \"@firebase/database\";\nvar name$f = \"@firebase/database-compat\";\nvar name$e = \"@firebase/functions\";\nvar name$d = \"@firebase/functions-compat\";\nvar name$c = \"@firebase/installations\";\nvar name$b = \"@firebase/installations-compat\";\nvar name$a = \"@firebase/messaging\";\nvar name$9 = \"@firebase/messaging-compat\";\nvar name$8 = \"@firebase/performance\";\nvar name$7 = \"@firebase/performance-compat\";\nvar name$6 = \"@firebase/remote-config\";\nvar name$5 = \"@firebase/remote-config-compat\";\nvar name$4 = \"@firebase/storage\";\nvar name$3 = \"@firebase/storage-compat\";\nvar name$2 = \"@firebase/firestore\";\nvar name$1 = \"@firebase/firestore-compat\";\nvar name = \"firebase\";\nvar version = \"9.6.8\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\n\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\nvar PLATFORM_LOG_STRING = (_PLATFORM_LOG_STRING = {}, _defineProperty(_PLATFORM_LOG_STRING, name$o, 'fire-core'), _defineProperty(_PLATFORM_LOG_STRING, name$n, 'fire-core-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$l, 'fire-analytics'), _defineProperty(_PLATFORM_LOG_STRING, name$m, 'fire-analytics-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$j, 'fire-app-check'), _defineProperty(_PLATFORM_LOG_STRING, name$k, 'fire-app-check-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$i, 'fire-auth'), _defineProperty(_PLATFORM_LOG_STRING, name$h, 'fire-auth-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$g, 'fire-rtdb'), _defineProperty(_PLATFORM_LOG_STRING, name$f, 'fire-rtdb-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$e, 'fire-fn'), _defineProperty(_PLATFORM_LOG_STRING, name$d, 'fire-fn-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$c, 'fire-iid'), _defineProperty(_PLATFORM_LOG_STRING, name$b, 'fire-iid-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$a, 'fire-fcm'), _defineProperty(_PLATFORM_LOG_STRING, name$9, 'fire-fcm-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$8, 'fire-perf'), _defineProperty(_PLATFORM_LOG_STRING, name$7, 'fire-perf-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$6, 'fire-rc'), _defineProperty(_PLATFORM_LOG_STRING, name$5, 'fire-rc-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$4, 'fire-gcs'), _defineProperty(_PLATFORM_LOG_STRING, name$3, 'fire-gcs-compat'), _defineProperty(_PLATFORM_LOG_STRING, name$2, 'fire-fst'), _defineProperty(_PLATFORM_LOG_STRING, name$1, 'fire-fst-compat'), _defineProperty(_PLATFORM_LOG_STRING, 'fire-js', 'fire-js'), _defineProperty(_PLATFORM_LOG_STRING, name, 'fire-js-all'), _PLATFORM_LOG_STRING);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\nvar _apps = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nvar _components = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\n\n\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(\"Component \".concat(component.name, \" failed to register with FirebaseApp \").concat(app.name), e);\n  }\n}\n/**\r\n *\r\n * @internal\r\n */\n\n\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\n\n\nfunction _registerComponent(component) {\n  var componentName = component.name;\n\n  if (_components.has(componentName)) {\n    logger.debug(\"There were multiple attempts to register component \".concat(componentName, \".\"));\n    return false;\n  }\n\n  _components.set(componentName, component); // add the component to existing app instances\n\n\n  var _iterator = _createForOfIteratorHelper(_apps.values()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var app = _step.value;\n\n      _addComponent(app, component);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\n\n\nfunction _getProvider(app, name) {\n  var heartbeatController = app.container.getProvider('heartbeat').getImmediate({\n    optional: true\n  });\n\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n\n  return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\n\n\nfunction _removeServiceInstance(app, name) {\n  var instanceIdentifier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ENTRY_NAME;\n\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\n\n\nfunction _clearComponents() {\n  _components.clear();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ERRORS = (_ERRORS = {}, _defineProperty(_ERRORS, \"no-app\"\n/* NO_APP */\n, \"No Firebase App '{$appName}' has been created - \" + 'call Firebase App.initializeApp()'), _defineProperty(_ERRORS, \"bad-app-name\"\n/* BAD_APP_NAME */\n, \"Illegal App name: '{$appName}\"), _defineProperty(_ERRORS, \"duplicate-app\"\n/* DUPLICATE_APP */\n, \"Firebase App named '{$appName}' already exists with different options or config\"), _defineProperty(_ERRORS, \"app-deleted\"\n/* APP_DELETED */\n, \"Firebase App named '{$appName}' already deleted\"), _defineProperty(_ERRORS, \"invalid-app-argument\"\n/* INVALID_APP_ARGUMENT */\n, 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.'), _defineProperty(_ERRORS, \"invalid-log-argument\"\n/* INVALID_LOG_ARGUMENT */\n, 'First argument to `onLog` must be null or a function.'), _defineProperty(_ERRORS, \"storage-open\"\n/* STORAGE_OPEN */\n, 'Error thrown when opening storage. Original error: {$originalErrorMessage}.'), _defineProperty(_ERRORS, \"storage-get\"\n/* STORAGE_GET */\n, 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.'), _defineProperty(_ERRORS, \"storage-set\"\n/* STORAGE_WRITE */\n, 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.'), _defineProperty(_ERRORS, \"storage-delete\"\n/* STORAGE_DELETE */\n, 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'), _ERRORS);\nvar ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FirebaseAppImpl = /*#__PURE__*/function () {\n  function FirebaseAppImpl(options, config, container) {\n    var _this = this;\n\n    _classCallCheck(this, FirebaseAppImpl);\n\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new Component('app', function () {\n      return _this;\n    }, \"PUBLIC\"\n    /* PUBLIC */\n    ));\n  }\n\n  _createClass(FirebaseAppImpl, [{\n    key: \"automaticDataCollectionEnabled\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._automaticDataCollectionEnabled;\n    },\n    set: function set(val) {\n      this.checkDestroyed();\n      this._automaticDataCollectionEnabled = val;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._name;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._options;\n    }\n  }, {\n    key: \"config\",\n    get: function get() {\n      this.checkDestroyed();\n      return this._config;\n    }\n  }, {\n    key: \"container\",\n    get: function get() {\n      return this._container;\n    }\n  }, {\n    key: \"isDeleted\",\n    get: function get() {\n      return this._isDeleted;\n    },\n    set: function set(val) {\n      this._isDeleted = val;\n    }\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\n\n  }, {\n    key: \"checkDestroyed\",\n    value: function checkDestroyed() {\n      if (this.isDeleted) {\n        throw ERROR_FACTORY.create(\"app-deleted\"\n        /* APP_DELETED */\n        , {\n          appName: this._name\n        });\n      }\n    }\n  }]);\n\n  return FirebaseAppImpl;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\n\n\nvar SDK_VERSION = version;\n\nfunction initializeApp(options) {\n  var rawConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof rawConfig !== 'object') {\n    var _name = rawConfig;\n    rawConfig = {\n      name: _name\n    };\n  }\n\n  var config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  var name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(\"bad-app-name\"\n    /* BAD_APP_NAME */\n    , {\n      appName: String(name)\n    });\n  }\n\n  var existingApp = _apps.get(name);\n\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (deepEqual(options, existingApp.options) && deepEqual(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\"\n      /* DUPLICATE_APP */\n      , {\n        appName: name\n      });\n    }\n  }\n\n  var container = new ComponentContainer(name);\n\n  var _iterator2 = _createForOfIteratorHelper(_components.values()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var component = _step2.value;\n      container.addComponent(component);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\n\n\nfunction getApp() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_ENTRY_NAME;\n\n  var app = _apps.get(name);\n\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\"\n    /* NO_APP */\n    , {\n      appName: name\n    });\n  }\n\n  return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\n\n\nfunction getApps() {\n  return Array.from(_apps.values());\n}\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nfunction deleteApp(_x) {\n  return _deleteApp.apply(this, arguments);\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\n\n\nfunction _deleteApp() {\n  _deleteApp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(app) {\n    var name;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            name = app.name;\n\n            if (!_apps.has(name)) {\n              _context9.next = 6;\n              break;\n            }\n\n            _apps.delete(name);\n\n            _context9.next = 5;\n            return Promise.all(app.container.getProviders().map(function (provider) {\n              return provider.delete();\n            }));\n\n          case 5:\n            app.isDeleted = true;\n\n          case 6:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _deleteApp.apply(this, arguments);\n}\n\nfunction registerVersion(libraryKeyOrName, version, variant) {\n  var _a; // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n\n\n  var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n\n  if (variant) {\n    library += \"-\".concat(variant);\n  }\n\n  var libraryMismatch = library.match(/\\s|\\//);\n  var versionMismatch = version.match(/\\s|\\//);\n\n  if (libraryMismatch || versionMismatch) {\n    var warning = [\"Unable to register library \\\"\".concat(library, \"\\\" with version \\\"\").concat(version, \"\\\":\")];\n\n    if (libraryMismatch) {\n      warning.push(\"library name \\\"\".concat(library, \"\\\" contains illegal characters (whitespace or \\\"/\\\")\"));\n    }\n\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n\n    if (versionMismatch) {\n      warning.push(\"version name \\\"\".concat(version, \"\\\" contains illegal characters (whitespace or \\\"/\\\")\"));\n    }\n\n    logger.warn(warning.join(' '));\n    return;\n  }\n\n  _registerComponent(new Component(\"\".concat(library, \"-version\"), function () {\n    return {\n      library: library,\n      version: version\n    };\n  }, \"VERSION\"\n  /* VERSION */\n  ));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\n\n\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\"\n    /* INVALID_LOG_ARGUMENT */\n    );\n  }\n\n  setUserLogHandler(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\n\n\nfunction setLogLevel(logLevel) {\n  setLogLevel$1(logLevel);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DB_NAME = 'firebase-heartbeat-database';\nvar DB_VERSION = 1;\nvar STORE_NAME = 'firebase-heartbeat-store';\nvar dbPromise = null;\n\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDb(DB_NAME, DB_VERSION, function (upgradeDB) {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(STORE_NAME);\n      }\n    }).catch(function (e) {\n      throw ERROR_FACTORY.create(\"storage-open\"\n      /* STORAGE_OPEN */\n      , {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n\n  return dbPromise;\n}\n\nfunction readHeartbeatsFromIndexedDB(_x2) {\n  return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\n\nfunction _readHeartbeatsFromIndexedDB() {\n  _readHeartbeatsFromIndexedDB = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(app) {\n    var db;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context10.sent;\n            return _context10.abrupt(\"return\", db.transaction(STORE_NAME).objectStore(STORE_NAME).get(computeKey(app)));\n\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](0);\n            throw ERROR_FACTORY.create(\"storage-get\"\n            /* STORAGE_GET */\n            , {\n              originalErrorMessage: _context10.t0.message\n            });\n\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 7]]);\n  }));\n  return _readHeartbeatsFromIndexedDB.apply(this, arguments);\n}\n\nfunction writeHeartbeatsToIndexedDB(_x3, _x4) {\n  return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\n\nfunction _writeHeartbeatsToIndexedDB() {\n  _writeHeartbeatsToIndexedDB = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(app, heartbeatObject) {\n    var db, tx, objectStore;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context11.sent;\n            tx = db.transaction(STORE_NAME, 'readwrite');\n            objectStore = tx.objectStore(STORE_NAME);\n            _context11.next = 8;\n            return objectStore.put(heartbeatObject, computeKey(app));\n\n          case 8:\n            return _context11.abrupt(\"return\", tx.complete);\n\n          case 11:\n            _context11.prev = 11;\n            _context11.t0 = _context11[\"catch\"](0);\n            throw ERROR_FACTORY.create(\"storage-set\"\n            /* STORAGE_WRITE */\n            , {\n              originalErrorMessage: _context11.t0.message\n            });\n\n          case 14:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11, null, [[0, 11]]);\n  }));\n  return _writeHeartbeatsToIndexedDB.apply(this, arguments);\n}\n\nfunction deleteHeartbeatsFromIndexedDB(_x5) {\n  return _deleteHeartbeatsFromIndexedDB.apply(this, arguments);\n}\n\nfunction _deleteHeartbeatsFromIndexedDB() {\n  _deleteHeartbeatsFromIndexedDB = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(app) {\n    var db, tx;\n    return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context12.sent;\n            tx = db.transaction(STORE_NAME, 'readwrite');\n            _context12.next = 7;\n            return tx.objectStore(STORE_NAME).delete(computeKey(app));\n\n          case 7:\n            return _context12.abrupt(\"return\", tx.complete);\n\n          case 10:\n            _context12.prev = 10;\n            _context12.t0 = _context12[\"catch\"](0);\n            throw ERROR_FACTORY.create(\"storage-delete\"\n            /* STORAGE_DELETE */\n            , {\n              originalErrorMessage: _context12.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 10]]);\n  }));\n  return _deleteHeartbeatsFromIndexedDB.apply(this, arguments);\n}\n\nfunction computeKey(app) {\n  return \"\".concat(app.name, \"!\").concat(app.options.appId);\n}\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_HEADER_BYTES = 1024; // 30 days\n\nvar STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nvar HeartbeatServiceImpl = /*#__PURE__*/function () {\n  function HeartbeatServiceImpl(container) {\n    var _this2 = this;\n\n    _classCallCheck(this, HeartbeatServiceImpl);\n\n    this.container = container;\n    /**\r\n     * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n     * the header string.\r\n     * Stores one record per date. This will be consolidated into the standard\r\n     * format of one record per user agent string before being sent as a header.\r\n     * Populated from indexedDB when the controller is instantiated and should\r\n     * be kept in sync with indexedDB.\r\n     * Leave public for easier testing.\r\n     */\n\n    this._heartbeatsCache = null;\n    var app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(function (result) {\n      _this2._heartbeatsCache = result;\n      return result;\n    });\n  }\n  /**\r\n   * Called to report a heartbeat. The function will generate\r\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n   * to IndexedDB.\r\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n   * already logged, subsequent calls to this function in the same day will be ignored.\r\n   */\n\n\n  _createClass(HeartbeatServiceImpl, [{\n    key: \"triggerHeartbeat\",\n    value: function () {\n      var _triggerHeartbeat = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var platformLogger, userAgent, date;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                platformLogger = this.container.getProvider('platform-logger').getImmediate(); // This is the \"Firebase user agent\" string from the platform logger\n                // service, not the browser user agent.\n\n                userAgent = platformLogger.getPlatformInfoString();\n                date = getUTCDateString();\n\n                if (!(this._heartbeatsCache === null)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 6;\n                return this._heartbeatsCachePromise;\n\n              case 6:\n                this._heartbeatsCache = _context.sent;\n\n              case 7:\n                if (!this._heartbeatsCache.some(function (singleDateHeartbeat) {\n                  return singleDateHeartbeat.date === date;\n                })) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 11:\n                // There is no entry for this date. Create one.\n                this._heartbeatsCache.push({\n                  date: date,\n                  userAgent: userAgent\n                });\n\n              case 12:\n                // Remove entries older than 30 days.\n                this._heartbeatsCache = this._heartbeatsCache.filter(function (singleDateHeartbeat) {\n                  var hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n                  var now = Date.now();\n                  return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n                });\n                return _context.abrupt(\"return\", this._storage.overwrite(this._heartbeatsCache));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function triggerHeartbeat() {\n        return _triggerHeartbeat.apply(this, arguments);\n      }\n\n      return triggerHeartbeat;\n    }()\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: It will read heartbeats from the heartbeatsCache, instead of from indexedDB to reduce latency\r\n     */\n\n  }, {\n    key: \"getHeartbeatsHeader\",\n    value: function () {\n      var _getHeartbeatsHeader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _extractHeartbeatsFor, heartbeatsToSend, unsentEntries, headerString;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(this._heartbeatsCache === null)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this._heartbeatsCachePromise;\n\n              case 3:\n                if (!(this._heartbeatsCache === null)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", '');\n\n              case 5:\n                // Extract as many heartbeats from the cache as will fit under the size limit.\n                _extractHeartbeatsFor = extractHeartbeatsForHeader(this._heartbeatsCache), heartbeatsToSend = _extractHeartbeatsFor.heartbeatsToSend, unsentEntries = _extractHeartbeatsFor.unsentEntries;\n                headerString = base64Encode(JSON.stringify({\n                  version: 2,\n                  heartbeats: heartbeatsToSend\n                }));\n\n                if (!(unsentEntries.length > 0)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                // Store any unsent entries if they exist.\n                this._heartbeatsCache = unsentEntries; // This seems more likely than deleteAll (below) to lead to some odd state\n                // since the cache isn't empty and this will be called again on the next request,\n                // and is probably safest if we await it.\n\n                _context2.next = 11;\n                return this._storage.overwrite(this._heartbeatsCache);\n\n              case 11:\n                _context2.next = 15;\n                break;\n\n              case 13:\n                this._heartbeatsCache = null; // Do not wait for this, to reduce latency.\n\n                void this._storage.deleteAll();\n\n              case 15:\n                return _context2.abrupt(\"return\", headerString);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getHeartbeatsHeader() {\n        return _getHeartbeatsHeader.apply(this, arguments);\n      }\n\n      return getHeartbeatsHeader;\n    }()\n  }]);\n\n  return HeartbeatServiceImpl;\n}();\n\nfunction getUTCDateString() {\n  var today = new Date(); // Returns date format 'YYYY-MM-DD'\n\n  return today.toISOString().substring(0, 10);\n}\n\nfunction extractHeartbeatsForHeader(heartbeatsCache) {\n  var maxSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : MAX_HEADER_BYTES;\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  var heartbeatsToSend = []; // Single date format heartbeats that are not sent.\n\n  var unsentEntries = heartbeatsCache.slice();\n\n  var _iterator3 = _createForOfIteratorHelper(heartbeatsCache),\n      _step3;\n\n  try {\n    var _loop = function _loop() {\n      var singleDateHeartbeat = _step3.value;\n      // Look for an existing entry with the same user agent.\n      var heartbeatEntry = heartbeatsToSend.find(function (hb) {\n        return hb.userAgent === singleDateHeartbeat.userAgent;\n      });\n\n      if (!heartbeatEntry) {\n        // If no entry for this user agent exists, create one.\n        heartbeatsToSend.push({\n          userAgent: singleDateHeartbeat.userAgent,\n          dates: [singleDateHeartbeat.date]\n        });\n\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          // If the header would exceed max size, remove the added heartbeat\n          // entry and stop adding to the header.\n          heartbeatsToSend.pop();\n          return \"break\";\n        }\n      } else {\n        heartbeatEntry.dates.push(singleDateHeartbeat.date); // If the header would exceed max size, remove the added date\n        // and stop adding to the header.\n\n        if (countBytes(heartbeatsToSend) > maxSize) {\n          heartbeatEntry.dates.pop();\n          return \"break\";\n        }\n      } // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n      // quota and the loop breaks early.)\n\n\n      unsentEntries = unsentEntries.slice(1);\n    };\n\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _ret = _loop();\n\n      if (_ret === \"break\") break;\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return {\n    heartbeatsToSend: heartbeatsToSend,\n    unsentEntries: unsentEntries\n  };\n}\n\nvar HeartbeatStorageImpl = /*#__PURE__*/function () {\n  function HeartbeatStorageImpl(app) {\n    _classCallCheck(this, HeartbeatStorageImpl);\n\n    this.app = app;\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n\n  _createClass(HeartbeatStorageImpl, [{\n    key: \"runIndexedDBEnvironmentCheck\",\n    value: function () {\n      var _runIndexedDBEnvironmentCheck = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (isIndexedDBAvailable()) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", false);\n\n              case 4:\n                return _context3.abrupt(\"return\", validateIndexedDBOpenable().then(function () {\n                  return true;\n                }).catch(function () {\n                  return false;\n                }));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function runIndexedDBEnvironmentCheck() {\n        return _runIndexedDBEnvironmentCheck.apply(this, arguments);\n      }\n\n      return runIndexedDBEnvironmentCheck;\n    }()\n    /**\r\n     * Read all heartbeats.\r\n     */\n\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var canUseIndexedDB, idbHeartbeatObject;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this._canUseIndexedDBPromise;\n\n              case 2:\n                canUseIndexedDB = _context4.sent;\n\n                if (canUseIndexedDB) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", []);\n\n              case 7:\n                _context4.next = 9;\n                return readHeartbeatsFromIndexedDB(this.app);\n\n              case 9:\n                idbHeartbeatObject = _context4.sent;\n                return _context4.abrupt(\"return\", (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) || []);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function read() {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }() // overwrite the storage with the provided heartbeats\n\n  }, {\n    key: \"overwrite\",\n    value: function () {\n      var _overwrite = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(heartbeats) {\n        var canUseIndexedDB;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this._canUseIndexedDBPromise;\n\n              case 2:\n                canUseIndexedDB = _context5.sent;\n\n                if (canUseIndexedDB) {\n                  _context5.next = 7;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\");\n\n              case 7:\n                return _context5.abrupt(\"return\", writeHeartbeatsToIndexedDB(this.app, {\n                  heartbeats: heartbeats\n                }));\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function overwrite(_x6) {\n        return _overwrite.apply(this, arguments);\n      }\n\n      return overwrite;\n    }() // add heartbeats\n\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(heartbeats) {\n        var canUseIndexedDB, existingHeartbeats;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this._canUseIndexedDBPromise;\n\n              case 2:\n                canUseIndexedDB = _context6.sent;\n\n                if (canUseIndexedDB) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\");\n\n              case 7:\n                _context6.next = 9;\n                return this.read();\n\n              case 9:\n                existingHeartbeats = _context6.sent;\n                return _context6.abrupt(\"return\", writeHeartbeatsToIndexedDB(this.app, {\n                  heartbeats: [].concat(_toConsumableArray(existingHeartbeats), _toConsumableArray(heartbeats))\n                }));\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function add(_x7) {\n        return _add.apply(this, arguments);\n      }\n\n      return add;\n    }() // delete heartbeats\n\n  }, {\n    key: \"delete\",\n    value: function () {\n      var _delete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(heartbeats) {\n        var canUseIndexedDB, existingHeartbeats;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this._canUseIndexedDBPromise;\n\n              case 2:\n                canUseIndexedDB = _context7.sent;\n\n                if (canUseIndexedDB) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 7:\n                _context7.next = 9;\n                return this.read();\n\n              case 9:\n                existingHeartbeats = _context7.sent;\n                return _context7.abrupt(\"return\", writeHeartbeatsToIndexedDB(this.app, {\n                  heartbeats: existingHeartbeats.filter(function (existingHeartbeat) {\n                    return !heartbeats.includes(existingHeartbeat);\n                  })\n                }));\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function _delete(_x8) {\n        return _delete2.apply(this, arguments);\n      }\n\n      return _delete;\n    }() // delete all heartbeats\n\n  }, {\n    key: \"deleteAll\",\n    value: function () {\n      var _deleteAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var canUseIndexedDB;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this._canUseIndexedDBPromise;\n\n              case 2:\n                canUseIndexedDB = _context8.sent;\n\n                if (canUseIndexedDB) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\");\n\n              case 7:\n                return _context8.abrupt(\"return\", deleteHeartbeatsFromIndexedDB(this.app));\n\n              case 8:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function deleteAll() {\n        return _deleteAll.apply(this, arguments);\n      }\n\n      return deleteAll;\n    }()\n  }]);\n\n  return HeartbeatStorageImpl;\n}();\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\n\n\nfunction countBytes(heartbeatsCache) {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64Encode( // heartbeatsCache wrapper properties\n  JSON.stringify({\n    version: 2,\n    heartbeats: heartbeatsCache\n  })).length;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerCoreComponents(variant) {\n  _registerComponent(new Component('platform-logger', function (container) {\n    return new PlatformLoggerServiceImpl(container);\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  ));\n\n  _registerComponent(new Component('heartbeat', function (container) {\n    return new HeartbeatServiceImpl(container);\n  }, \"PRIVATE\"\n  /* PRIVATE */\n  )); // Register `app` package.\n\n\n  registerVersion(name$o, version$1, variant); // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n\n  registerVersion(name$o, version$1, 'esm2017'); // Register platform SDK identifier (no version).\n\n  registerVersion('fire-js', '');\n}\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\n\n\nregisterCoreComponents('');\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };","map":{"version":3,"mappings":"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","names":["PlatformLoggerServiceImpl","container","providers","getProviders","map","isVersionServiceProvider","provider","service","getImmediate","library","version","filter","logString","join","component","getComponent","type","logger","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","appName","appCompatName","analyticsName","analyticsCompatName","appCheckName","appCheckCompatName","authName","authCompatName","databaseName","databaseCompatName","functionsName","functionsCompatName","installationsName","installationsCompatName","messagingName","messagingCompatName","performanceName","performanceCompatName","remoteConfigName","remoteConfigCompatName","storageName","storageCompatName","firestoreName","firestoreCompatName","packageName","_apps","Map","_components","_addComponent","app","addComponent","e","debug","name","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","has","set","values","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","clearInstance","_clearComponents","clear","ERRORS","ERROR_FACTORY","ErrorFactory","FirebaseAppImpl","options","config","_options","Object","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","checkDestroyed","val","_isDeleted","isDeleted","create","SDK_VERSION","initializeApp","rawConfig","String","existingApp","get","deepEqual","ComponentContainer","newApp","getApp","getApps","Array","from","deleteApp","delete","Promise","all","registerVersion","libraryKeyOrName","variant","_a","libraryMismatch","match","versionMismatch","warning","push","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","setLogLevelImpl","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDb","upgradeDB","oldVersion","createObjectStore","catch","originalErrorMessage","message","readHeartbeatsFromIndexedDB","db","transaction","objectStore","computeKey","writeHeartbeatsToIndexedDB","heartbeatObject","tx","put","complete","deleteHeartbeatsFromIndexedDB","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","then","_heartbeatsCache","result","platformLogger","userAgent","getPlatformInfoString","date","getUTCDateString","some","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","base64Encode","JSON","stringify","heartbeats","length","deleteAll","today","toISOString","substring","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","isIndexedDBAvailable","validateIndexedDBOpenable","canUseIndexedDB","idbHeartbeatObject","existingHeartbeats","includes","existingHeartbeat","registerCoreComponents"],"sources":["C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\platformLoggerService.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\logger.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\constants.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\internal.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\errors.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\firebaseApp.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\api.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\indexeddb.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\heartbeatService.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\registerCoreComponents.ts","C:\\Users\\Daniel\\Desktop\\DGS web\\DGS-web\\node_modules\\@firebase\\app\\src\\index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_WRITE = 'storage-set',\n  STORAGE_DELETE = 'storage-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_WRITE]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [AppError.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.STORAGE_OPEN]: { originalErrorMessage?: string };\n  [AppError.STORAGE_GET]: { originalErrorMessage?: string };\n  [AppError.STORAGE_WRITE]: { originalErrorMessage?: string };\n  [AppError.STORAGE_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DB_NAME, DB_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(STORE_NAME);\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.STORAGE_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app));\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_GET, {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.complete;\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_WRITE, {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nexport async function deleteHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    await tx.objectStore(STORE_NAME).delete(computeKey(app));\n    return tx.complete;\n  } catch (e) {\n    throw ERROR_FACTORY.create(AppError.STORAGE_DELETE, {\n      originalErrorMessage: e.message\n    });\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64Encode,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  deleteHeartbeatsFromIndexedDB,\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: SingleDateHeartbeat[] | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<SingleDateHeartbeat[]>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const userAgent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    if (\n      this._heartbeatsCache.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      // Do not store a heartbeat if one is already stored for this day.\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.push({ date, userAgent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache = this._heartbeatsCache.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: It will read heartbeats from the heartbeatsCache, instead of from indexedDB to reduce latency\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null, it's been cleared and has not been repopulated.\n    if (this._heartbeatsCache === null) {\n      return '';\n    }\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache\n    );\n    const headerString = base64Encode(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache = unsentEntries;\n      // This seems more likely than deleteAll (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache = null;\n      // Do not wait for this, to reduce latency.\n      void this._storage.deleteAll();\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.userAgent === singleDateHeartbeat.userAgent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        userAgent: singleDateHeartbeat.userAgent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<SingleDateHeartbeat[]> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return [];\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject?.heartbeats || [];\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeats: SingleDateHeartbeat[]): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      return writeHeartbeatsToIndexedDB(this.app, { heartbeats });\n    }\n  }\n  // add heartbeats\n  async add(heartbeats: SingleDateHeartbeat[]): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeats = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        heartbeats: [...existingHeartbeats, ...heartbeats]\n      });\n    }\n  }\n  // delete heartbeats\n  async delete(heartbeats: SingleDateHeartbeat[]): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeats = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        heartbeats: existingHeartbeats.filter(\n          existingHeartbeat => !heartbeats.includes(existingHeartbeat)\n        )\n      });\n    }\n  }\n  // delete all heartbeats\n  async deleteAll(): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      return deleteHeartbeatsFromIndexedDB(this.app);\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64Encode(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n"]},"metadata":{},"sourceType":"module"}